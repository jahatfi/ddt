@String{acm            = {{ACM}}}
@String{acmcsur        = {{ACM} Computing Surveys}}
@String{aoms           = {The Annals of Mathematical Statistics}}
@String{ase            = {International Conference on Automated Software Engineering~(ASE)}}
@String{asian          = {Annual Asian Computing Science Conference~(ASIAN)}}
@String{cav            = {International Conference on Computer Aided Verification~(CAV)}}
@String{chinaf         = {{SCIENCE} {CHINA} Information Sciences}}
@String{coap           = {Computational Optimization and Applications}}
@String{comjnl         = {The Computer Journal}}
@String{computer       = {Computer}}
@String{dagstuhl       = {Schloss Dagstuhl – Leibnitz-Zentrum für Informatik}}
@String{dest           = {International Conference on Digital Ecosystems and Technologies~(DEST)}}
@String{dsai           = {International Conference on Software Development and Technologies for Enhancing Accessibility and Fighting Info-exclusion~(DSAI)}}
@String{ecoop          = {European Conference on Object-Oriented Programming~(ECOOP)}}
@String{ecsee          = {European Conference of Software Engineering Education~(ECSEE)}}
@String{emse           = {Empirical Software Engineering}}
@String{ese            = {Empirical Software Engineering}}
@String{esecfse        = {Joint Meeting of the European Software Engineering Conference and the Symposium on the Foundations of Software Engineering~(ESEC/FSE)}}
@String{fse            = {International Symposium on Foundations of Software Engineering~(FSE)}}
@String{gecco          = {Annual Conference on Genetic and Evolutionary Computation~(GECCO)}}
@String{gi             = {{Gesellschaft für Informatik}}}
@String{icpc           = {International Conference on Program Comprehension~(ICPC)}}
@String{icse           = {International Conference on Software Engineering~(ICSE)}}
@String{icseast        = {International Workshop on Automation of Software Testing~(AST@ICSE)}}
@String{icsecompanion  = {International Conference on Software Engineering Companion~(ICSE Companion)}}
@String{icsesbst       = {International Workshop on Search-Based Software Testing~(SBST@ICSE)}}
@String{icseseet       = {International Conference on Software Engineering: Software Engineering Education and Training Track~(ICSE-SEET)}}
@String{icseseip       = {International Conference on Software Engineering: Software Engineering in Practice Track~(ICSE-SEIP)}}
@String{icst           = {International Conference on Software Testing, Verification and Validation~(ICST)}}
@String{icstworkshops  = {International Conference on Software Testing, Verification and Validation Workshops~(ICST-Workshops)}}
@String{ictss          = {{IFIP} International Conference on Testing Software and Systems}}
@String{ieee           = {{IEEE}}}
@String{ieeeacm        = {{IEEE}/{ACM}}}
@String{ieeecompsoc    = {{IEEE} Computer Society}}
@String{infsof         = {Information {\&} Software Technology}}
@String{issta          = {International Symposium on Software Testing and Analysis~(ISSTA)}}
@String{iwst           = {International Workshop on Smalltalk Technologies~(IWST)}}
@String{jossw          = {Journal of Open Source Software}}
@String{jss            = {Journal of Systems and Software}}
@String{LIPIcs         = {Leibnitz International Proceedings in Informatics~(LIPIcs)}}
@String{lnbip          = {Lecture Notes in Business Information Processing}}
@String{lncs           = {Lecture Notes in Computer Science}}
@String{lni            = {Lecture Notes in Informatics}}
@String{memics         = {International Doctoral Workshop on Mathematical and Engineering Methods in Computer Science~(MEMICS)}}
@String{nfm            = {{NASA} International Symposium on Formal Methods~(NFM)}}
@String{oopsla         = {Annual {ACM} {SIGPLAN} Conference on Object-Oriented Programming, Systems, Languages, and Applications~(OOPSLA)}}
@String{pacmpl         = {Proceedings of the ACM on Programming Languages}}
@String{pldi           = {Symposium on Programming Language Design and Implementation~(PLDI)}}
@String{popl           = {Symposium on Principles of Programming Languages~(POPL)}}
@String{qsic           = {International Conference on Quality Software~(QSIC)}}
@String{sac            = {Symposium on Applied Computing~(SAC)}}
@String{saner          = {International Conference on Software Analysis, Evolution, and Reengineering~(SANER)}}
@String{se             = {Software Engineering, Fachtagung des GI-Fachbereichs Softwaretechnik}}
@String{sigcse         = {Technical Symposium on Computer Science Education~(SIGCSE)}}
@String{sigsoftsenotes = {ACM SIGSOFT Software Engineering Notes}}
@String{spe            = {Software: Practice and Experience}}
@String{spin           = {International Symposium on Model Checking Software~(SPIN)}}
@String{springer       = {Springer}}
@String{sqj            = {Software Quality Journal}}
@String{ssbse          = {International Symposium on Search Based Software Engineering~(SSBSE)}}
@String{sttt           = {International Journal on Software Tools for Technology Transfer}}
@String{stvr           = {Journal of Software Testing, Verification and Reliability}}
@String{swqd           = {Software Quality. Model-Based Approaches for Advanced Software and Systems Engineering}}
@String{systor         = {International Conference on Systems and Storage~(SYSTOR)}}
@String{tacas          = {International Conference on Tools and Algorithms for the Construction and Analysis of Systems~(TACAS)}}
@String{tap            = {International Conference on Tests and Proofs~(TAP)}}
@String{tosem          = {{ACM} Transactions on Software Engineering and Methodology}}
@String{tse            = {{IEEE} Transactions on Software Engineering}}
@String{zenodo         = {Zenodo}}


@Article{AGM+17,
  author  = {Esben Andreasen and Liang Gong and Anders Møller and Michael Pradel and Marija Selakovic and Koushik Sen and Cristian{-}Alexandru Staicu},
  journal = acmcsur,
  title   = {A Survey of Dynamic Analysis and Test Generation for JavaScript},
  year    = {2017},
  number  = {5},
  pages   = {66:1--66:36},
  volume  = {50},
  doi     = {10.1145/3106739},
}

@Article{CCM+18,
  author  = {Zhifei Chen and Lin Chen and Wanwangying Ma and Xiaoyu Zhou and Uming Zhou and Baowen Xu},
  journal = infsof,
  title   = {Understanding Metric-based Detectable Smells in Python Software: A Comparative Study},
  year    = {2018},
  pages   = {14--29},
  volume  = {94},
  doi     = {10.1016/j.infsof.2017.09.011},
}

@InProceedings{CRJ12,
  author    = {Ravi Chough and Patrick Maxim Rondon and Ranjit Jhala},
  booktitle = popl,
  title     = {Nested Refinements: A Logic for Duck Typing},
  year      = {2012},
  pages     = {231--244},
  publisher = acm,
  doi       = {10.1145/2103656.2103686},
}

@InProceedings{DAB18,
  author    = {Santanu Kumar Dash and Miltiadis Allamanis and Earl T. Barr},
  booktitle = esecfse,
  title     = {RefiNym: Using Names to Refine Types},
  year      = {2018},
  pages     = {107--117},
  publisher = acm,
  doi       = {10.1145/3236024.3236042},
}

@InProceedings{DOB11,
  author    = {Stéphane Ducasse and Manuel Oriol and Alexandre Bergel},
  booktitle = iwst,
  title     = {Challenges to Support Automated Random Testing for Dynamically Typed Languages},
  year      = {2011},
  pages     = {9:1--9:6},
  publisher = acm,
  doi       = {10.1145/2166929.2166938},
}

@InProceedings{GBB17,
  author    = {Zheng Gao and Christian Bird and Earl T. Barr},
  booktitle = icse,
  title     = {To Type or Not To Type: Quantifying Detectable Bugs in JavaScript},
  year      = {2017},
  pages     = {758--769},
  publisher = ieeeacm,
  doi       = {10.1109/ICSE.2017.75},
}

@InProceedings{HPH11,
  author    = {Michael Haupt and Michael Perscheid and Robert Hirschfeld},
  booktitle = sac,
  title     = {Type Harvesting: A Practical Approach to Obtaining Typing Information in Dynamic Programming Language},
  year      = {2011},
  pages     = {1282--1289},
  publisher = acm,
  doi       = {10.1145/1982185.1982464},
}

@InProceedings{HBB+18,
  author    = {Vincent J. Hellendoorn and Christian Bird and Earl T. Barr and Miltiadis Allamanis},
  booktitle = esecfse,
  title     = {Deep Learning Type Inference},
  year      = {2018},
  pages     = {152--162},
  publisher = acm,
  doi       = {10.1145/3236024.3236051},
}

@InProceedings{HSJ13,
  author    = {Rick Hoving and Gabriel Slot and Slinger Jansen},
  booktitle = dest,
  title     = {Python: Characteristics Identification of a Free Open Source Software Ecosystem},
  year      = {2013},
  pages     = {13--18},
  publisher = ieee,
  doi       = {10.1109/DEST.2013.6611322},
}

@InProceedings{KBL+13,
  author    = {Pavneet Singh Kochar and Tegawendé F. Bissyandé and David Lo and Lingxiao Jiang},
  booktitle = qsic,
  title     = {An Emprical Study of Adoption of Software Testing in Open Source Projects},
  year      = {2013},
  pages     = {103--112},
  publisher = ieee,
  doi       = {10.1109/QSIC.2013.57},
}

@InProceedings{KWL16,
  author    = {Pavneet Singh Kochar and Dinusha Wijedasa and David Lo},
  booktitle = saner,
  title     = {A Large Scale Study of Multiple Programming Languages and Code Quality},
  year      = {2016},
  pages     = {563--573},
  publisher = ieeecompsoc,
  doi       = {10.1109/SANER.2016.112},
}

@InProceedings{MFT11,
  author    = {Stefan Mairhofer and Robert Feldt and Richard Torkar},
  booktitle = gecco,
  title     = {Search-based Software Testing and Test Data Generation for a Dynamic Programming Language},
  year      = {2011},
  pages     = {1859--1866},
  publisher = acm,
  doi       = {10.1145/2001576.2001826},
}

@InProceedings{MGN17,
  author    = {Nevena Milojkovic and Mohammad Ghafari and Oscar Nierstrasz},
  booktitle = icpc,
  title     = {It's Duck (Typing) Season!},
  year      = {2017},
  pages     = {312--315},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICPC.2017.10},
}

@InProceedings{SMC+13,
  author    = {Samir Sapra and Marius Minea and Sagar Chaki and Arie Gurfinkel and Edmund M. Clarke},
  booktitle = ictss,
  title     = {Finding Errors in Python Programs Using Dynamic Symbolic Execution},
  year      = {2013},
  pages     = {283--289},
  publisher = springer,
  series    = lncs,
  volume    = {8254},
  doi       = {10.1007/978-3-642-41707-8\_20},
}

@InProceedings{SJR+15,
  author    = {Sina Shamshiri and René Just and José Miguel Rojas and Gordon Fraser and Phil McMinn and Andrea Arcuri},
  booktitle = ase,
  title     = {Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges},
  year      = {2015},
  pages     = {201--211},
  publisher = ieeecompsoc,
  doi       = {10.1109/ASE.2015.86},
}

@InProceedings{TG17,
  author    = {Fabian Trautsch and Jens Grabowski},
  booktitle = icst,
  title     = {Are There Any Unit Tests? An Empirical Study on Unit Testing in Open Source Python Projects},
  year      = {2017},
  pages     = {207--218},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICST.2017.26},
}

@Article{CML+18,
  author  = {Zhifei Chen and Wanwangying Ma and Wei Lin and Lin Chen and Yanhui Li and Baowen Xu},
  journal = chinaf,
  title   = {A Study on the Changes of Dynamic Feature Code when Fixing Bugs: Towards the Benefits and Costs of Python Dynamic Features},
  year    = {2018},
  number  = {1},
  pages   = {012107:1--012107:18},
  volume  = {61},
  doi     = {10.1007/s11432-017-9153-3},
}

@Article{SPG15,
  author  = {Abdelilah Sakti and Gilles Pesant and Yann{-}Gaël Guéhéneuc},
  journal = tse,
  title   = {Instance Generator and Problem Representation to Improve Object Oriented Code Coverage},
  year    = {2015},
  number  = {3},
  pages   = {294--313},
  volume  = {41},
  doi     = {10.1109/TSE.2014.2363479},
}

@Book{RN10,
  title     = {Aritificial Intelligence---{A} Modern Approach {(3. internat. ed.)}},
  publisher = {Pearson Education},
  year      = {2010},
  author    = {Stuart J. Russell and Peter Norvig},
}

@InProceedings{PLE+07,
  author    = {Carlos Pacheco and Shuvendu K. Lahiri and Michael D. Ernst and Thomas Ball},
  booktitle = icse,
  title     = {Feedback-Directed Random Test Generation},
  year      = {2007},
  pages     = {75--84},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICSE.2007.37},
}

@InProceedings{FA12,
  author    = {Gordon Fraser and Andrea Arcuri},
  booktitle = icst,
  title     = {The Seed is Strong: Seeding Strategies in Search-Based Software Testing},
  year      = {2012},
  pages     = {121--130},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICST.2012.92},
}

@Article{AB14,
  author  = {Andrea Arcuri and Lionel C. Briand},
  journal = stvr,
  title   = {A Hitchhiker's Guide to Statistical Tests for Assessing Randomized Algorithms in Software Engineering},
  year    = {2014},
  number  = {3},
  pages   = {219--250},
  volume  = {24},
  doi     = {10.1002/stvr.1486},
}

@InProceedings{GKS05,
  author    = {Patrice Godefroid and Nils Klarlund and Koushik Sen},
  booktitle = pldi,
  title     = {{DART:} Directed Automated Random Testing},
  year      = {2005},
  pages     = {213--223},
  publisher = acm,
  doi       = {10.1145/1065010.1065036},
}

@InProceedings{SMA05,
  author    = {Koushik Sen and Darko Marinov and Gul Agha},
  booktitle = esecfse,
  title     = {{CUTE:} A Concolic Unit Testing Engine for {C}},
  year      = {2005},
  pages     = {263--272},
  publisher = acm,
  doi       = {10.1145/1081706.1081750},
}

@InProceedings{TdH08,
  author    = {Nikolai Tillman and Jonathan de Halleux},
  booktitle = tap,
  title     = {Pex-White Box Test Generation for .NET},
  year      = {2008},
  pages     = {134--153},
  publisher = springer,
  series    = lncs,
  volume    = {4966},
  doi       = {10.1007/978-3-540-79124-9\_10},
}

@InProceedings{FA11,
  author    = {Gordon Fraser and Andrea Arcuri},
  booktitle = esecfse,
  title     = {EvoSuite: Automatic Test Suite Generation for Object-Oriented Software},
  year      = {2011},
  pages     = {416--419},
  publisher = acm,
  doi       = {10.1145/2025113.2025179},
}

@InProceedings{BLM10,
  author    = {Luciano Baresi and Pier Luca Lanzi and Matteo Miraz},
  booktitle = icst,
  title     = {TestFul: An Evolutionary Test Approach for Java},
  year      = {2010},
  pages     = {185--194},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICST.2010.54},
}

@InProceedings{ALM07,
  author    = {James H. Andrews and Felix Chung Hang Li and Tim Menzies},
  booktitle = ase,
  title     = {Nighthawk: A Two-Level Genetic-Random Unit Test Data Generator},
  year      = {2007},
  pages     = {144--153},
  publisher = acm,
  doi       = {10.1145/1321631.1321654},
}

@Article{JA19,
  author        = {Abhinav Jangda and Gaurav Anand},
  title         = {Predicting Variable Types in Dynamically Typed Programming Languages},
  journal       = {CoRR},
  year          = {2019},
  volume        = {abs/1901.05138},
  archiveprefix = {arXiv},
  eprint        = {1901.05138},
}

@InProceedings{HUE+18,
  author    = {Mostafa Hassan and Caterina Urban and Marco Eilers and Peter Müller},
  booktitle = cav,
  title     = {MaxSMT-Based Type Inference for Python 3},
  year      = {2018},
  pages     = {12--19},
  publisher = springer,
  series    = lncs,
  volume    = {10982},
  doi       = {10.1007/978-3-319-96142-2\_2},
}

@InProceedings{ACF+11,
  author    = {Jong{-}hoon (David) An and Avik Chaudhuri and Jeffrey S. Foster and Michael Hicks},
  booktitle = popl,
  title     = {Dynamic Inference of Static Types for Ruby},
  year      = {2011},
  pages     = {459--472},
  publisher = acm,
  doi       = {10.1145/1926385.1925437},
}

@InProceedings{BLW15,
  author    = {Dirk Beyer and Stefan Löwe and Philipp Wendler},
  booktitle = spin,
  title     = {Benchmarking and Resource Measurement},
  year      = {2015},
  pages     = {160--178},
  publisher = springer,
  series    = lncs,
  volume    = {9232},
  doi       = {10.1007/978-3-319-23404-5\_12},
}

@InProceedings{XZC+16,
  author    = {Zhaogui Xu and Xiangyu Zhang and Lin Chen and Kexin Pei and Baowen Xu},
  booktitle = fse,
  title     = {Python Probabilistic Type Inference with Natural Language Support},
  year      = {2016},
  pages     = {607--618},
  publisher = acm,
  doi       = {10.1145/2950290.2950343},
}

@InProceedings{MPP19,
  author    = {Rabee Sohail Malik and Jibesh Patra and Michael Pradel},
  booktitle = icse,
  title     = {NL2Type: Inferring JavaScript Function Types from Natural Language Information},
  year      = {2019},
  pages     = {304--315},
  publisher = ieeeacm,
  doi       = {10.1109/ICSE.2019.00045},
}

@InCollection{FR19,
  author    = {Gordon Fraser and José Miguel Rojas},
  booktitle = {Handbook of Software Engineering},
  publisher = springer,
  title     = {Software Testing},
  year      = {2019},
  editor    = {Sungdeok Cha and Richard N. Taylor and Kyo Chul Kang},
  pages     = {123--192},
  doi       = {10.1007/978-3-030-00262-6\_4},
}

@InProceedings{MMP15,
  author    = {Shabnam Mirshokraie and Ali Mesbah and Karthik Pattabiraman},
  booktitle = icst,
  title     = {{JSEFT}: Automated Javascript Unit Test Generation},
  year      = {2015},
  pages     = {1--10},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICST.2015.7102595},
}

@InProceedings{ADJ+2011,
  author    = {Shay Artzi and Julian Dolby and Simon Holm Jensen and Anders M{\o}ller and Frank Tip},
  booktitle = icse,
  title     = {A Framework for Automated Testing of {JavaScript} Web Applications},
  year      = {2011},
  pages     = {571--580},
  publisher = acm,
  doi       = {10.1145/1985793.1985871},
}

@InProceedings{LAG14,
  author    = {Guodong Li and Esben Andreasen and Indradeep Ghosh},
  booktitle = fse,
  title     = {{SymJS}: Automatic Symbolic Testing of {JavaScript} Web Applications},
  year      = {2014},
  pages     = {449--459},
  publisher = acm,
  doi       = {10.1145/2635858.2635913},
}

@Article{McM04,
  author  = {Phil McMinn},
  journal = stvr,
  title   = {Search-based Software Test Data Generation: A Survey},
  year    = {2004},
  number  = {2},
  pages   = {105--156},
  volume  = {14},
  doi     = {10.1002/stvr.294},
}

@InProceedings{Luk19,
  author    = {Stephan Lukasczyk},
  booktitle = ase,
  title     = {Generating Tests to Analyse Dynamically-Typed Programs},
  year      = {2019},
  pages     = {1226--1229},
  publisher = ieee,
  doi       = {10.1109/ASE.2019.00146},
}

@Article{FAM15,
  author  = {Gordon Fraser and Andrea Arcuri and Phil McMinn},
  journal = jss,
  title   = {A Memetic Algorithm for Whole Test Suite Generation},
  year    = {2015},
  pages   = {311--327},
  volume  = {103},
  doi     = {10.1016/j.jss.2014.05.032},
}

@InCollection{AF14,
  author    = {Andrea Arcuri and Gordon Fraser},
  booktitle = ssbse,
  publisher = springer,
  title     = {On the Effectiveness of Whole Test Suite Generation},
  year      = {2014},
  pages     = {1--15},
  series    = lncs,
  volume    = {8636},
  doi       = {10.1007/978-3-319-09940-8\_1},
}

@Article{FA13,
  author    = {Gordon Fraser and Andrea Arcuri},
  journal   = tse,
  title     = {Whole Test Suite Generation},
  year      = {2013},
  number    = {2},
  pages     = {276--291},
  volume    = {39},
  publisher = ieee,
  doi       = {10.1109/TSE.2012.14},
}

@InProceedings{FA11a,
  author    = {Gordon Fraser and Andrea Arcuri},
  booktitle = qsic,
  title     = {Evolutionary Generation of Whole Test Suites},
  year      = {2011},
  pages     = {31--40},
  publisher = ieeecompsoc,
  doi       = {10.1109/QSIC.2011.19},
}

@InProceedings{PKT15,
  author    = {Annibale Panichella and Fitsum Meshesha Kifetew and Paolo Tonella},
  booktitle = icst,
  title     = {Reformulating Branch Coverage as a Many-Objective Optimization Problem},
  year      = {2015},
  pages     = {1--10},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICST.2015.7102604},
}

@Article{PKT18,
  author    = {Annibale Panichella and Fitsum Meshesha Kifetew and Paolo Tonella},
  journal   = tse,
  title     = {Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets},
  year      = {2018},
  number    = {2},
  pages     = {122--158},
  volume    = {44},
  publisher = ieee,
  doi       = {10.1109/TSE.2017.2663435},
}

@InProceedings{CLM04,
  author    = {Tsong Yueh Chen and Hing Leung and I. K. Mak},
  booktitle = asian,
  title     = {Adaptive Random Testing},
  year      = {2004},
  pages     = {320--329},
  publisher = springer,
  series    = lncs,
  volume    = {3321},
  doi       = {10.1007/978-3-540-30502-6\_23},
}

@InProceedings{HK04,
  author    = {Melinda R. Hess and Jeffrey D. Kromrey},
  booktitle = {annual meeting of the American Educational Research Association},
  title     = {Robust confidence intervals for effect sizes: {A} comparative study of {Cohen}’sd and {Cliff}’s delta under non-normality and heterogeneous variances},
  year      = {2004},
  pages     = {1--30},
}

@Article{VD00,
  author    = {Andr{\'a}s Vargha and Harold D. Delaney},
  journal   = {Journal of Educational and Behavioral Statistics},
  title     = {A critique and improvement of the CL common language effect size statistics of McGraw and Wong},
  year      = {2000},
  number    = {2},
  pages     = {101--132},
  volume    = {25},
  publisher = {Sage Publications},
}

@Article{A13,
  author    = {Andrea Arcuri},
  journal   = stvr,
  title     = {It really does matter how you normalize the branch distance in search-based software testing},
  year      = {2013},
  number    = {2},
  pages     = {119--147},
  volume    = {23},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/journals/stvr/Arcuri13.bib},
  timestamp = {Wed, 01 Apr 2020 08:46:11 +0200},
  doi       = {10.1002/stvr.457},
}

@InProceedings{L66,
  author    = {Vladimir Iosifovich Levenshtein},
  booktitle = {Soviet physics doklady},
  title     = {Binary codes capable of correcting deletions, insertions, and reversals},
  year      = {1966},
  number    = {8},
  pages     = {707--710},
  volume    = {10},
}

@Article{AML11,
  author    = {James H. Andrews and Tim Menzies and Felix Chun Hang Li},
  journal   = tse,
  title     = {Genetic algorithms for randomized unit testing},
  year      = {2011},
  number    = {1},
  pages     = {80--94},
  volume    = {37},
  publisher = ieee,
  doi       = {10.1109/TSE.2010.46},
}

@InProceedings{BM10,
  author    = {Luciano Baresi and Matteo Miraz},
  booktitle = icse,
  title     = {Testful: Automatic unit-test generation for java classes},
  year      = {2010},
  pages     = {281--284},
  publisher = acm,
  volume    = {2},
  doi       = {10.1145/1810295.1810353},
}

@InProceedings{Ton04,
  author    = {Paolo Tonella},
  booktitle = issta,
  title     = {Evolutionary testing of classes},
  year      = {2004},
  pages     = {119--128},
  publisher = acm,
  doi       = {10.1145/1007512.1007528},
}

@Article{CS04,
  author    = {Christoph Csallner and Yannis Smaragdakis},
  journal   = spe,
  title     = {JCrasher: an automatic robustness tester for Java},
  year      = {2004},
  number    = {11},
  pages     = {1025--1050},
  volume    = {34},
  doi       = {10.1002/spe.602},
}

@InProceedings{MAZ+15,
  author       = {Lei Ma and Cyrille Artho and Cheng Zhang and Hiroyuki Sato and Johannes Gmeiner and Rudolf Ramler},
  booktitle    = ase,
  title        = {{GRT:} Program-Analysis-Guided Random Testing {(T)}},
  year         = {2015},
  pages        = {212--223},
  publisher    = ieeecompsoc,
  doi          = {10.1109/ASE.2015.49},
}

@InProceedings{FA14,
  author    = {Gordon Fraser and Andrea Arcuri},
  title     = {Automated Test Generation for Java Generics},
  booktitle = swqd,
  series    = lnbip,
  volume    = {166},
  pages     = {185--198},
  publisher = springer,
  year      = {2014},
  doi       = {10.1007/978-3-319-03602-1\_12},
}

@Article{SPK+18,
  author    = {Marija Selakovic and Michael Pradel and Rezwana Karim and Frank Tip},
  title     = {Test Generation for Higher-order Functions in Dynamic Languages},
  journal   = pacmpl,
  volume    = {2},
  number    = {{OOPSLA}},
  pages     = {161:1--161:27},
  year      = {2018},
  publisher = acm,
  doi       = {10.1145/3276531},
}

@article{CAF+18,
  author    = {José Campos and Yan Ge and Nasser Albunian and Gordon Fraser and Marcelo Eler and Andrea Arcuri},
  title     = {An empirical evaluation of evolutionary algorithms for unit test suite generation},
  journal   = infsof,
  volume    = {104},
  pages     = {207--235},
  year      = {2018},
  doi       = {10.1016/j.infsof.2018.08.010},
}

@article{PKT18a,
  title     = {A large scale empirical comparison of state-of-the-art
  search-based test case generators},
  author    = {Annibale Panichella and Fitsum Meshesha Kifetew and Paolo
  Tonella},
  journal   = infsof,
  volume    = {104},
  pages     = {236--256},
  year      = {2018},
  doi       = {10.1016/j.infsof.2018.08.009},
}

@InProceedings{LKF20,
  author    = {Stephan Lukasczyk and Florian Kroi\ss{} and Gordon Fraser},
  title     = {Automated Unit Test Generation for Python},
  booktitle = ssbse,
  series    = lncs,
  volume    = {12420},
  pages     = {9--24},
  publisher = springer,
  year      = {2020},
  doi       = {10.1007/978-3-030-59762-7\_2},
}

@Article{FA14a,
  author  = {Gordon Fraser and Andrea Arcuri},
  journal = tosem,
  title   = {A Large-Scale Evaluation of Automated Unit Test Generation Using EvoSuite},
  year    = {2014},
  number  = {2},
  pages   = {8:1--8:42},
  volume  = {24},
  doi     = {10.1145/2685612},
}

@InProceedings{Xie06,
  author    = {Tao Xie},
  title     = {Augmenting Automatically Generated Unit-Test Suites with Regression Oracle Checking},
  booktitle = ecoop,
  series    = lncs,
  volume    = {4067},
  pages     = {380--403},
  publisher = springer,
  year      = {2006},
  doi       = {10.1007/11785477\_23},
}

@Article{DLS78,
  author    = {Richard A. DeMillo and Richard J. Lipton and Frederick G. Sayward},
  title     = {Hints on Test Data Selection: Help for the Practicing Programmer},
  journal   = computer,
  volume    = {11},
  number    = {4},
  pages     = {34--41},
  year      = {1978},
  doi       = {10.1109/C-M.1978.218136},
}

@InProceedings{MG11,
  author    = {Zoltan Majo and Thomas R. Gross},
  booktitle = systor,
  title     = {Memory System Performancen in a {NUMA} Multicore Multiprocessor},
  year      = {2011},
  pages     = {12:1--12:10},
  publisher = acm,
  doi       = {10.1145/1987816.1987832},
  keywords  = {NUMA, memory system performance, multicore processors},
}

@Article{BLW19,
  author  = {Dirk Beyer and Stefan Löwe and Philipp Wendler},
  journal = sttt,
  title   = {Reliable Benchmarkung: Requirements and Solutions},
  year    = {2019},
  number  = {1},
  pages   = {1--29},
  volume  = {21},
  doi     = {10.1007/s10009-017-0469-y},
}

@InProceedings{BAT14,
  author    = {Gavin M. Bierman and Martín Abadi and Mads Torgersen},
  booktitle = ecoop,
  title     = {Understanding {TypeScript}},
  year      = {2014},
  pages     = {257--281},
  publisher = springer,
  series    = lncs,
  volume    = {8586},
  doi       = {10.1007/978-3-662-44202-9\_11},
}

@InProceedings{WSL+20,
  author    = {Ratnadira Widyasari and Sheng Qin Sim and Camellia Lok and Haodi Qi and Jack Phan and Qijin Tay and Constance Tan and Fiona Wee and Jodie Ethelda Tan and Yuheng Yieh and Brian Goh and Ferdian Thung and Hong Jin Kang and Thong Hoang and David Lo and Eng Lieh Ouh},
  booktitle = esecfse,
  title     = {{BugsInPy}: A Database of Existing Bugs in {Python} Programs to Enable Controlled Testing and Debugging Studies},
  year      = {2020},
  pages     = {1556--1560},
  publisher = acm,
  doi       = {10.1145/3368089.3417943},
}

@InProceedings{GPS+15,
  author    = {Liang Gong and Michael Pradel and Manu Sridharan and Koushik Sen},
  booktitle = issta,
  title     = {{DLint:} Dynamically Checking Bad Coding Practices in {JavaScript}},
  year      = {2015},
  pages     = {94--105},
  publisher = acm,
  doi       = {10.1145/2771783.2771809},
}

@InProceedings{KHR+12,
  author    = {Sebastian Kleinschmager and Stefan Hanenberg and Romain Robbes and Éric Tanter and Andreas Stefik},
  booktitle = icpc,
  title     = {Do Static Type Systems Improve the Maintainability of Software Systems? An Empirical Study},
  year      = {2012},
  pages     = {153--162},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICPC.2012.6240483},
}

@InProceedings{MHR+12,
  author    = {Clemens Mayer and Stefan Hanenberg and Romain Robbes and Éric Tanter and Andreas Stefik},
  booktitle = oopsla,
  title     = {An Empirical Study of the Influence of Static Type Systems on the Usability of Undocumented Software},
  year      = {2012},
  pages     = {683--702},
  publisher = acm,
  doi       = {10.1145/2384616.2384666},
}

@InProceedings{MR13,
  author    = {Leo A. Meyerovich and Ariel S. Rabkin},
  booktitle = oopsla,
  title     = {Empirical Analysis of Programming Language Adoption},
  year      = {2013},
  pages     = {1--18},
  publisher = acm,
  doi       = {10.1145/2509136.2509515},
}

@InProceedings{XLZ+16,
  author    = {Zhaogui Xu and Peng Liu and Xiangyu Zhang and Baowen Xu},
  booktitle = fse,
  title     = {Python Predictive Analysis for Bug Detection},
  year      = {2016},
  pages     = {121--132},
  publisher = acm,
  doi       = {10.1145/2950290.2950357},
}

@InProceedings{DH14,
  author    = {Anna Derezinska and Konrad Ha{\l}as},
  title     = {Experimental Evaluation of Mutation Testing Approaches to Python Programs},
  booktitle = icstworkshops,
  pages     = {156--164},
  year      = {2014},
  publisher = ieeecompsoc,
  doi       = {10.1109/ICSTW.2014.24},
}

@software{Luk21Pynguin080,
  author       = {Stephan Lukasczyk and Florian Kroiß and Gordon Fraser and Pynguin Contributors},
  title        = {se2p/pynguin: Pynguin v0.8.0},
  month        = apr,
  year         = 2021,
  publisher    = zenodo,
  version      = {v0.8.0},
  doi          = {10.5281/zenodo.4719786},
}

@software{Luk21Pynguin0131,
  author       = {Stephan Lukasczyk and Florian Kroiß and Gordon Fraser and Pynguin Contributors},
  title        = {se2p/pynguin: Pynguin v0.13.1},
  month        = nov,
  year         = 2021,
  publisher    = zenodo,
  version      = {v0.13.1},
  doi          = {10.5281/zenodo.5648310},
}

@InProceedings{Arc17,
  author       = {Andrea Arcuri},
  title        = {Many Independent Objective {(MIO)} Algorithm for Test Suite Generation},
  booktitle    = ssbse,
  year         = {2017},
  pages        = {3--17},
  doi          = {10.1007/978-3-319-66299-2\_1},
  publisher    = springer,
  series       = lncs,
  volume       = {10452},
}

@Article{LBB14,
  author       = {Christian von Lücken and Benjamín Barán and Carlos A. Brizuela},
  title        = {A Survey on Multi-objective Evolutionary Algorithms for Many-objective Problems},
  journal      = coap,
  volume       = {58},
  number       = {3},
  pages        = {707--756},
  year         = {2014},
  doi          = {10.1007/s10589-014-9644-1},
}

@Article{Arc18,
  author       = {Andrea Arcuri},
  title        = {Test Suite Generation with the Many Independent Objective {(MIO)} Algorithm},
  journal      = infsof,
  volume       = {104},
  pages        = {195--206},
  year         = {2018},
  doi          = {10.1016/j.infsof.2018.05.003},
}

@Article{MH19,
  author       = {David MacIver and Zac Hatfield{-}Dodds},
  title        = {Hypothesis: {A} new approach to property-based testing},
  journal      = jossw,
  volume       = {4},
  number       = {43},
  pages        = {1891},
  year         = {2019},
  doi          = {10.21105/joss.01891},
}

@InProceedings{MD20,
  author       = {David MacIver and Alastair F. Donaldson},
  title        = {Test-Case Reduction via Test-Case Generation: Insights from the Hypothesis Reducer (Tool Insights Paper)},
  booktitle    = ecoop,
  pages        = {13:1--13:27},
  year         = {2020},
  doi          = {10.4230/LIPIcs.ECOOP.2020.13},
  series       = LIPIcs,
  volume       = {166},
  publisher    = dagstuhl,
}

@article{MLG21,
  author       = {Amir M. Mir and
                  Evaldas Latoskinas and
                  Georgios Gousios},
  title        = {ManyTypes4Py: {A} Benchmark Python Dataset for Machine Learning-based Type Inference},
  journal      = {CoRR},
  volume       = {abs/2104.04706},
  year         = {2021},
  archivePrefix = {arXiv},
  eprint       = {2104.04706},
}

@article{JH11,
  author    = {Yue Jia and Mark Harman},
  title     = {An Analysis and Survey of the Development of Mutation Testing},
  journal   = tse,
  volume    = {37},
  number    = {5},
  pages     = {649--678},
  year      = {2011},
  doi       = {10.1109/TSE.2010.62},
}

@InProceedings{WL05,
  author    = {Stefan Wappler and Frank Lammermann},
  booktitle = gecco,
  title     = {Using evolutionary algorithms for the unit testing of object-oriented software},
  year      = {2005},
  pages     = {1053--1060},
  doi       = {10.1145/1068009.1068187},
}

@article{BA82,
  author    = {Timothy A. Budd and Dana Angluin},
  title     = {Two Notions of Correctness and Their Relation to Testing},
  journal   = {Acta Informatica},
  volume    = {18},
  pages     = {31--45},
  year      = {1982},
  doi       = {10.1007/BF00625279},
}

@article{Ham77,
  author    = {Richard G. Hamlet},
  title     = {Testing Programs with the Aid of a Compiler},
  journal   = tse,
  volume    = {3},
  number    = {4},
  pages     = {279--290},
  year      = {1977},
  doi       = {10.1109/TSE.1977.231145},
}

@article{OP97,
  author    = {A. Jefferson Offutt and Jie Pan},
  title     = {Automatically Detecting Equivalent Mutants and Infeasible Paths},
  journal   = stvr,
  volume    = {7},
  number    = {3},
  pages     = {165--192},
  year      = {1997},
  doi       = {10.1002/(SICI)1099-1689(199709)7:3\<165::AID-STVR143\>3.0.CO;2-U},
}

@article{Wey82,
  author    = {Elaine J. Weyuker},
  title     = {On Testing Non-Testable Programs},
  journal   = comjnl,
  volume    = {25},
  number    = {4},
  pages     = {465--470},
  year      = {1982},
  doi       = {10.1093/comjnl/25.4.465},
}

@techreport{ABD+79,
  author    = {Allen T. Acree and Timothy A. Budd and Richard A. DeMillo and Richard J. Lipton and Frederick G. Sayward},
  title     = {Mutation Analysis},
  institution = {Georgia Institute of Technology},
  address   = {Atlanta, Georgia, USA},
  number    = {GIT-ICS-79/08},
  year      = {1978},
}

@misc{Lip71,
  author    = {Richard J. Lipton},
  title     = {Fault Diagnosis of Computer Programs},
  year      = {1971},
  note      = {Student Report, Carnegie Mellong University},
}

@article{HAB+20,
  author    = {Josie Holmes and Iftekhar Ahmed and Caius Brindescu and Rahul Gopinath and He Zhang and Alex Groce},
  title     = {Using Relative Lines of Code to Guide Automated Test Generation for
               Python},
  journal   = tosem,
  volume    = {29},
  number    = {4},
  pages     = {28:1--28:38},
  year      = {2020},
  doi       = {10.1145/3408896},
}

@Article{HGP+18,
  author  = {Josie Holmes and Alex Groce and Jervis Pinto and Pranjal Mittal and Pooria Azimi and Kevin Kellar and James O'Brien},
  journal = sttt,
  title   = {{TSTL:} the template scripting testing language},
  year    = {2018},
  number  = {1},
  pages   = {57--78},
  volume  = {20},
  doi     = {10.1007/s10009-016-0445-y},
}

@inproceedings{GP15,
  author    = {Alex Groce and Jervis Pinto},
  title     = {A Little Language for Testing},
  booktitle = nfm,
  pages     = {204--218},
  year      = {2015},
  doi       = {10.1007/978-3-319-17524-9\_15},
  series    = lncs,
  volume    = {9058},
  publisher = springer,
}

@article{MW47,
  author    = {Henry B. Mann and Donald R. Whitney},
  title     = {On a Test of Whether one of Two Random Variables is Stociastically Larger than the Other},
  volume    = {18},
  journal   = aoms,
  number    = {1},
  pages     = {50--60},
  year      = {1947},
  doi       = {10.1214/aoms/1177730491},
}

@article{AF13,
  author    = {Andrea Arcuri and Gordon Fraser},
  title     = {Parameter tuning or default values?  An empirical investigation in search-based software engineering},
  journal   = emse,
  volume    = {18},
  number    = {3},
  pages     = {594--623},
  year      = {2013},
  doi       = {10.1107/s10664-013-9249-9},
}

@InProceedings{GKL08,
  author    = {Patrice Godefroid and Adam Kiezun and Michael Y. Levin},
  title     = {Grammar-based Whitebox Fuzzing},
  booktitle = pldi,
  pages     = {206--215},
  year      = {2008},
  doi       = {10.1145/1375581.1375607},
  publisher = acm,
}

@InProceedings{Fan19,
  author    = {Zhiyu Fan},
  title     = {A Systematic Evaluation of Problematic Tests Generated by {EvoSuite}},
  booktitle = icsecompanion,
  pages     = {165--167},
  year      = {2019},
  doi       = {10.1109/ICSE-Companion.2019.00068},
  publisher = ieeeacm,
  year      = {2019},
}

@article{GLK+21,
  author    = {Martin Gruber and Stephan Lukasczyk and Florian Kroiß and Gordon Fraser},
  title     = {An Empirical Study of Flaky Tests in Python},
  journal   = {CoRR},
  volume    = {abs/2101.09077},
  year      = {2021},
  archivePrefix = {arXiv},
  eprint    = {2101.09077},
}

@InProceedings{Pea95,
  author    = {Karl Pearson},
  title     = {Notes on Regression and Inheritance in the Case of Two Parents},
  booktitle = {Proceedings of the Royal Society of London},
  year      = {1895},
  volume    = {58},
  pages     = {240--242},
}

@Article{DN84,
  author  = {Joe W. Duran and Simeon C. Ntafos},
  journal = tse,
  title   = {An Evaluation of Random Testing},
  year    = {1984},
  number  = {4},
  pages   = {438--444},
  volume  = {10},
  doi     = {10.1109/TSE.1984.5010257},
}

@InProceedings{PS15,
  author    = {Michael Pradel and Koushik Sen},
  booktitle = ecoop,
  title     = {The Good, the Bad, and the Ugly: An Empirical Study on Implicit Type Conversions in JavaScript},
  year      = {2015},
  pages     = {519--541},
  publisher = dagstuhl,
  series    = lipics,
  volume    = {37},
  doi       = {10.4230/LIPIcs.ECOOP.2015.519},
}

@Article{BHM+15,
  author  = {Earl T. Barr and Mark Harman and Phil McMinn and Muzammil Shahbaz and Shin Yoo},
  journal = tse,
  title   = {The Oracle Problem in Software Testing: {A} Survey},
  year    = {2015},
  number  = {5},
  pages   = {507--525},
  volume  = {41},
  doi     = {10.1109/TSE.2014.2372785},
}

@Article{FZ12,
  author  = {Gordon Fraser and Andreas Zeller},
  journal = tse,
  title   = {Mutation-Driven Generation of Unit Tests and Oracles},
  year    = {2012},
  number  = {2},
  pages   = {278--292},
  volume  = {38},
  doi     = {10.1109/TSE.2011.93},
}

@Article{LKF21,
  author  = {Stephan Lukasczyk and Florian Kroiß and Gordon Fraser},
  title   = {An Empirical Study of Automated Unit Test Generation for Python},
  journal = {CoRR},
  volume  = {abs/2111.05003},
  year    = {2021},
  eprinttype = {arXiv},
  eprint  = {2111.05003},
}

@Article{FGG+21,
  author  = {Afonso Fontes and Gregory Gay and Francisco Gomes de Oliveira Neto and Robert Feldt},
  title   = {Automated Support for Unit Test Generation: {A} Tutorial Book Chapter},
  journal = {CoRR},
  volume  = {abs/2110.13575},
  year    = {2021},
  eprinttype = {arXiv},
  eprint = {2110.13575},
}

@InProceedings{MB08,
  author    = {Leonardo Mendon{\c{c}}a de Moura and Nikolaj Bj{\o}rner},
  booktitle = tacas,
  title     = {{Z3:} An Efficient {SMT} Solver},
  year      = {2008},
  pages     = {337--340},
  publisher = springer,
  series    = lncs,
  volume    = {4963},
  doi       = {10.1007/978-3-540-78800-3\_24},
}

@Article{RVA+17,
  author  = {José Miguel Rojas and Mattia Vivanti and Andrea Arcuri and Gordon Fraser},
  journal = emse,
  title   = {A detailed investigation of the effectiveness of whole test suite generation},
  year    = {2017},
  number  = {2},
  pages   = {852--893},
  volume  = {22},
  doi     = {10.1007/s10664-015-9424-2},
}

@Software{Luk22Pynguin0170,
  author    = {Stephan Lukasczyk and Florian Kroiß and Gordon Fraser and Pynguin Contributors},
  doi       = {10.5281/zenodo.5971799},
  month     = feb,
  publisher = zenodo,
  title     = {se2p/pynguin: Pynguin v0.17.0},
  version   = {v0.17.0},
  year      = {2022},
}

@InProceedings{RCC+12,
  author    = {John Regehr and Yang Chen and Pascal Couq and Eric Eide and Chucky Ellison and Xuejun Yang},
  booktitle = pldi,
  title     = {Test-Case Reduction for C Compiler Bugs},
  year      = {2012},
  pages     = {335--346},
  publisher = acm,
  doi       = {10.1145/2254064.2254104},
}
% New
@book{percival2014test,
  title={Test-driven development with Python: obey the testing goat: using Django, Selenium, and JavaScript},
  author={Percival, Harry},
  year={2014},
  publisher={" O'Reilly Media, Inc."}
}

@inproceedings{lukasczyk2020automated,
  title={Automated unit test generation for python},
  author={Lukasczyk, Stephan and Kroi{\ss}, Florian and Fraser, Gordon},
  booktitle={Search-Based Software Engineering: 12th International Symposium, SSBSE 2020, Bari, Italy, October 7--8, 2020, Proceedings 12},
  pages={9--24},
  year={2020},
  organization={Springer}
}

@article{bhatia2023unit,
  title={Unit test generation using generative AI: A comparative performance analysis of autogeneration tools},
  author={Bhatia, Shreya and Gandhi, Tarushi and Kumar, Dhruv and Jalote, Pankaj},
  journal={arXiv preprint arXiv:2312.10622},
  year={2023}
}

@article{takerngsaksiri2024tdd,
  title={TDD Without Tears: Towards Test Case Generation from Requirements through Deep Reinforcement Learning},
  author={Takerngsaksiri, Wannita and Charakorn, Rujikorn and Tantithamthavorn, Chakkrit and Li, Yuan-Fang},
  journal={arXiv preprint arXiv:2401.07576},
  year={2024}
}

@ARTICLE{wang2024software,
  author={Wang, Junjie and Huang, Yuchao and Chen, Chunyang and Liu, Zhe and Wang, Song and Wang, Qing},
  journal={IEEE Transactions on Software Engineering}, 
  title={Software Testing With Large Language Models: Survey, Landscape, and Vision}, 
  year={2024},
  volume={50},
  number={4},
  pages={911-936},
  abstract={Pre-trained large language models (LLMs) have recently emerged as a breakthrough technology in natural language processing and artificial intelligence, with the ability to handle large-scale datasets and exhibit remarkable performance across a wide range of tasks. Meanwhile, software testing is a crucial undertaking that serves as a cornerstone for ensuring the quality and reliability of software products. As the scope and complexity of software systems continue to grow, the need for more effective software testing techniques becomes increasingly urgent, making it an area ripe for innovative approaches such as the use of LLMs. This paper provides a comprehensive review of the utilization of LLMs in software testing. It analyzes 102 relevant studies that have used LLMs for software testing, from both the software testing and LLMs perspectives. The paper presents a detailed discussion of the software testing tasks for which LLMs are commonly used, among which test case preparation and program repair are the most representative. It also analyzes the commonly used LLMs, the types of prompt engineering that are employed, as well as the accompanied techniques with these LLMs. It also summarizes the key challenges and potential opportunities in this direction. This work can serve as a roadmap for future research in this area, highlighting potential avenues for exploration, and identifying gaps in our current understanding of the use of LLMs in software testing.},
  keywords={Software testing;Task analysis;Computational modeling;Codes;Software systems;Natural language processing;Reviews;Pre-trained large language model;software testing;LLM;GPT},
  doi={10.1109/TSE.2024.3368208},
  ISSN={1939-3520},
  month={April},}


@INPROCEEDINGS{rao2023cat,
  author={Rao, Nikitha and Jain, Kush and Alon, Uri and Goues, Claire Le and Hellendoorn, Vincent J.},
  booktitle={2023 38th IEEE/ACM International Conference on Automated Software Engineering (ASE)}, 
  title={CAT-LM Training Language Models on Aligned Code And Tests}, 
  year={2023},
  volume={},
  number={},
  pages={409-420},
  abstract={Testing is an integral but often neglected part of the software development process. Classical test generation tools such as EvoSuite generate behavioral test suites by optimizing for coverage, but tend to produce tests that are hard to understand. Language models trained on code can generate code that is highly similar to that written by humans, but current models are trained to generate each file separately, as is standard practice in natural language processing, and thus fail to consider the code-under-test context when producing a test file. In this work, we propose the Aligned Code And Tests Language Model (CAT-LM), a GPT-style language model with 2.7 Billion parameters, trained on a corpus of Python and Java projects. We utilize a novel pretraining signal that explicitly considers the mapping between code and test files when available. We also drastically increase the maximum sequence length of inputs to 8,192 tokens, 4x more than typical code generation models, to ensure that the code context is available to the model when generating test code. We analyze its usefulness for realistic applications, showing that sampling with filtering (e.g., by compilability, coverage) allows it to efficiently produce tests that achieve coverage similar to ones written by developers while resembling their writing style. By utilizing the code context, CAT-LM generates more valid tests than even much larger language models trained with more data (CodeGen 16B and StarCoder) and substantially outperforms a recent test-specific model (TeCo) at test completion. Overall, our work highlights the importance of incorporating software-specific insights when training language models for code and paves the way to more powerful automated test generation.},
  keywords={Training;Codes;Runtime;Data models;Software;Test pattern generators;Standards;test generation;test completion;large language models;code-test alignment},
  doi={10.1109/ASE56229.2023.00193},
  ISSN={2643-1572},
  month={Sep.},}

@article{lahiri2022interactive,
  title={Interactive code generation via test-driven user-intent formalization},
  author={Lahiri, Shuvendu K and Naik, Aaditya and Sakkas, Georgios and Choudhury, Piali and von Veh, Curtis and Musuvathi, Madanlal and Inala, Jeevana Priya and Wang, Chenglong and Gao, Jianfeng},
  journal={arXiv preprint arXiv:2208.05950},
  year={2022}
}

@article{kang2018function,
  title={Function call interception techniques},
  author={Kang, Pilsung},
  journal={Software: Practice and Experience},
  volume={48},
  number={3},
  pages={385--401},
  year={2018},
  publisher={Wiley Online Library}
}

@article{10.1145/3354584,
author = {Lilis, Yannis and Savidis, Anthony},
title = {A Survey of Metaprogramming Languages},
year = {2019},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0360-0300},
url = {https://doi.org/10.1145/3354584},
doi = {10.1145/3354584},
abstract = {Metaprogramming is the process of writing computer programs that treat programs as data, enabling them to analyze or transform existing programs or generate new ones. While the concept of metaprogramming has existed for several decades, activities focusing on metaprogramming have been increasing rapidly over the past few years, with most languages offering some metaprogramming support and the amount of metacode being developed growing exponentially. In this article, we introduce a taxonomy of metaprogramming languages and present a survey of metaprogramming languages and systems based on the taxonomy. Our classification is based on the metaprogramming model adopted by the language, the phase of the metaprogram evaluation, the metaprogram source location, and the relation between the metalanguage and the object language.},
journal = {ACM Comput. Surv.},
month = {oct},
articleno = {113},
numpages = {39},
keywords = {reflection, multistage languages, meta-object protocols, macro systems, generative programming, aspect-oriented programming, Metaprogramming}
}
@Comment{jabref-meta: databaseType:bibtex;}
