{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "function_metadata"
   ],
   "is_method": false,
   "source_file": null,
   "lines": [
      1584,
      1585,
      1586,
      1587,
      1588,
      1589,
      1590,
      1589,
      1591,
      1592,
      1593,
      1595,
      1598,
      1600,
      1601,
      1605,
      1606,
      1608,
      1609,
      1610,
      1612,
      1613,
      1614,
      1615,
      1616,
      1617,
      1620,
      1623,
      1624,
      1625,
      1626,
      1627,
      1630,
      1632,
      1633,
      1634,
      1635,
      1636,
      1637,
      1638,
      1639,
      1640,
      1642,
      1646,
      1647,
      1649,
      1650,
      1651,
      1652,
      1654,
      1655,
      1656,
      1657,
      1658,
      1659,
      1660,
      1661,
      1662,
      1664,
      1665,
      1666,
      1667,
      1668,
      1669,
      1670,
      1671,
      1674,
      1675,
      1676,
      1683,
      1684,
      1686,
      1687,
      1688
   ],
   "non_code_lines": [
      1594,
      1596,
      1597,
      1599,
      1602,
      1603,
      1604,
      1607,
      1611,
      1618,
      1619,
      1621,
      1622,
      1628,
      1629,
      1631,
      1641,
      1643,
      1644,
      1645,
      1648,
      1653,
      1663,
      1672,
      1673,
      1677,
      1678,
      1679,
      1680,
      1681,
      1682,
      1685
   ],
   "coverage_io": {
      "dce7f034965683380614f34f4d740d3fc4a1f4cccc0376e0b47f2d334859e20d": {
         "args": [
            "CoverageInfo(args=['all_types.get_item_at_index', \"FunctionMetaData(name='get_item_at_index', parameter_names=['iterable', 'index'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_all_types/all_types.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False)\"], kwargs={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[277, 278, 316, 318, 319, 320, 323, 324, 1081, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1104, 1105, 1108, 1111, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1146, 1147, 1148], exception_type='', exception_message='', constructor='', cost=0.004)",
            "\"  \"",
            "\"unit_test_generator\"",
            "FunctionMetaData(name='update_metadata', parameter_names=['f', 'this_metadata'], is_method=False, lines=[1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], non_code_lines={1130, 1124}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'d0eb5422a7465a482ca7ab729bea8d09b281bd64d24199fd626c0116ec46adaf': CoverageInfo(args=['all_types.get_item_at_index', \"FunctionMetaData(name='get_item_at_index', parameter_names=['iterable', 'index'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_all_types/all_types.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False)\"], kwargs={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[277, 278, 316, 318, 319, 320, 323, 324, 1081, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1104, 1105, 1108, 1111, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1146, 1147, 1148], exception_type='', exception_message='', constructor='', cost=0.004)}, coverage_percentage=76.92, types_in_use={'src.unit_test_generator.FunctionMetaData', 'pathlib.WindowsPath', 'logging.Logger', 'all_types'}, unified_test_coverage={1121, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1146, 1147, 1148}, needs_pytest=False)"
         ],
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "expected_result": "['    result = unit_test_generator.update_metadata(f,this_metadata)\\n', '    assert result == expected_result or result == eval(expected_result)\\n']",
         "expected_type": "list",
         "coverage": [
            229,
            230,
            231,
            232,
            233,
            234,
            236,
            239,
            240,
            241,
            244,
            249,
            250,
            254,
            255,
            259,
            260,
            264,
            266,
            267,
            277,
            278,
            285,
            286,
            287,
            288,
            316,
            318,
            319,
            320,
            323,
            324,
            447,
            448,
            463,
            468,
            473,
            474,
            475,
            477,
            478,
            479,
            481,
            482,
            483,
            487,
            491,
            497,
            498,
            502,
            504,
            505,
            510,
            517,
            525,
            537,
            538,
            702,
            703,
            717,
            723,
            726,
            727,
            728,
            739,
            741,
            744,
            746,
            766,
            767,
            771,
            785,
            836,
            838,
            841,
            842,
            844,
            846,
            855,
            861,
            863,
            866,
            867,
            868,
            869,
            870,
            872,
            886,
            887,
            888,
            889,
            890,
            891,
            892,
            915,
            916,
            918,
            919,
            920,
            921,
            922,
            924,
            926,
            932,
            933,
            934,
            936,
            937,
            942,
            943,
            944,
            946,
            955,
            956,
            958,
            959,
            960,
            961,
            967,
            968,
            969,
            990,
            1000,
            1002,
            1012,
            1014,
            1015,
            1022,
            1023,
            1030,
            1031,
            1033,
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1044,
            1049,
            1050,
            1062,
            1063,
            1068,
            1069,
            1070,
            1072,
            1073,
            1074,
            1081,
            1083,
            1084,
            1085,
            1086,
            1087,
            1089,
            1090,
            1091,
            1092,
            1104,
            1105,
            1108,
            1111,
            1121,
            1123,
            1125,
            1126,
            1127,
            1128,
            1129,
            1131,
            1132,
            1134,
            1135,
            1136,
            1137,
            1138,
            1139,
            1140,
            1142,
            1146,
            1147,
            1148,
            1202,
            1204,
            1205,
            1206,
            1207,
            1208,
            1584,
            1585,
            1586,
            1587,
            1588,
            1589,
            1590,
            1591,
            1592,
            1593,
            1595,
            1598,
            1605,
            1606,
            1612,
            1613,
            1623,
            1624,
            1625,
            1630,
            1646,
            1647,
            1650,
            1651,
            1654,
            1655,
            1656,
            1664,
            1665,
            1666,
            1667,
            1668,
            1674,
            1676,
            1683,
            1684,
            1688
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.163
      }
   },
   "coverage_percentage": 50.0,
   "types_in_use": [
      "logging.Logger",
      "pathlib.WindowsPath",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "unified_test_coverage": [
      1584,
      1585,
      1586,
      1587,
      1588,
      1589,
      1590,
      1591,
      1592,
      1593,
      1595,
      1598,
      1605,
      1606,
      1612,
      1613,
      1623,
      1624,
      1625,
      1630,
      1646,
      1647,
      1650,
      1651,
      1654,
      1655,
      1656,
      1664,
      1665,
      1666,
      1667,
      1668,
      1674,
      1676,
      1683,
      1684,
      1688
   ],
   "needs_pytest": false,
   "exceptions_raised": []
}