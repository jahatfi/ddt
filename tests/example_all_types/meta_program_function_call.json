{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "func_name",
      "result_type",
      "parameter_names",
      "raises_ex"
   ],
   "lines": [
      1552,
      1565,
      1566,
      1567,
      1568,
      1569,
      1572,
      1573,
      1574,
      1575,
      1576,
      1577,
      1579,
      1580,
      1582,
      1583,
      1584,
      1586,
      1587,
      1588,
      1589,
      1590,
      1591,
      1592,
      1593,
      1596,
      1597,
      1598,
      1599,
      1601,
      1603,
      1604,
      1605,
      1606,
      1609,
      1612,
      1613,
      1614,
      1615,
      1616,
      1617,
      1618,
      1619,
      1620,
      1622,
      1626,
      1627,
      1629,
      1630,
      1631,
      1632,
      1634,
      1635,
      1636,
      1637,
      1638,
      1639,
      1640,
      1642,
      1643,
      1644,
      1645,
      1646,
      1647,
      1648,
      1649,
      1653,
      1654,
      1655,
      1656,
      1657,
      1658,
      1659,
      1660,
      1662
   ],
   "non_code_lines": [
      1553,
      1554,
      1555,
      1556,
      1557,
      1558,
      1559,
      1560,
      1561,
      1562,
      1563,
      1564,
      1570,
      1571,
      1578,
      1581,
      1585,
      1594,
      1595,
      1600,
      1602,
      1607,
      1608,
      1610,
      1611,
      1621,
      1623,
      1624,
      1625,
      1628,
      1633,
      1641,
      1650,
      1651,
      1652,
      1661
   ],
   "is_method": false,
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "source_file": null,
   "coverage_io": {
      "d030bfec826b7e0b57f8ab9627aa6d0141b9159b59dc607dc2212390e03df62f": {
         "args": [
            "CoverageInfo(args=['all_types.get_item_at_index'], kwargs={}, globals_before={}, globals_after={}, result='[[22, 29, 30, 31, 32, 33, 34, 36], set(), set()]', coverage=[1032, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1055, 1056, 1058, 1061, 1064, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1099, 1104], exception_type='', exception_message='', constructor='', cost=0.022, result_type='list')",
            "\"  \"",
            "\"unit_test_generator\"",
            "\"return_function_line_numbers_and_accessed_globals\"",
            "\"list\"",
            "['f']",
            "False"
         ],
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "result": "['    x = unit_test_generator.return_function_line_numbers_and_accessed_globals(f)\\n', \"    if result in ['None', 'True', 'False']:\\n\", '      assert x is result\\n', '    else:\\n', '      assert x == result or repr(x) == result or x == repr(result)\\n']",
         "coverage": [
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            234,
            235,
            236,
            238,
            239,
            242,
            249,
            250,
            251,
            252,
            280,
            281,
            282,
            285,
            286,
            408,
            409,
            420,
            425,
            426,
            431,
            432,
            433,
            435,
            436,
            437,
            439,
            440,
            441,
            445,
            449,
            454,
            455,
            459,
            461,
            463,
            471,
            479,
            487,
            499,
            500,
            654,
            655,
            669,
            675,
            678,
            679,
            680,
            687,
            689,
            692,
            694,
            722,
            723,
            727,
            742,
            788,
            790,
            793,
            794,
            796,
            798,
            807,
            813,
            815,
            818,
            819,
            820,
            821,
            822,
            823,
            826,
            840,
            841,
            842,
            843,
            844,
            845,
            846,
            864,
            865,
            867,
            868,
            872,
            873,
            874,
            875,
            877,
            879,
            885,
            886,
            887,
            889,
            890,
            895,
            896,
            897,
            899,
            907,
            908,
            910,
            911,
            912,
            913,
            919,
            920,
            921,
            942,
            951,
            953,
            959,
            961,
            962,
            969,
            970,
            977,
            978,
            980,
            981,
            982,
            984,
            985,
            986,
            987,
            988,
            990,
            991,
            995,
            1000,
            1001,
            1013,
            1014,
            1019,
            1020,
            1021,
            1023,
            1024,
            1025,
            1032,
            1034,
            1035,
            1036,
            1037,
            1038,
            1040,
            1041,
            1042,
            1043,
            1055,
            1056,
            1058,
            1061,
            1064,
            1074,
            1076,
            1078,
            1079,
            1080,
            1081,
            1082,
            1083,
            1084,
            1088,
            1089,
            1090,
            1091,
            1092,
            1093,
            1095,
            1099,
            1104,
            1157,
            1159,
            1160,
            1161,
            1162,
            1163,
            1444,
            1446,
            1565,
            1566,
            1567,
            1568,
            1569,
            1572,
            1579,
            1580,
            1586,
            1587,
            1596,
            1598,
            1599,
            1601,
            1603,
            1626,
            1627,
            1630,
            1631,
            1634,
            1635,
            1636,
            1642,
            1643,
            1644,
            1645,
            1646,
            1653,
            1654,
            1655,
            1656,
            1657,
            1658,
            1659,
            1660,
            1662
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.646,
         "result_type": "list"
      }
   },
   "coverage_percentage": 48.0,
   "types_in_use": [
      "logging.Logger",
      "src.unit_test_generator.CoverageInfo"
   ],
   "unified_test_coverage": [
      1565,
      1566,
      1567,
      1568,
      1569,
      1572,
      1579,
      1580,
      1586,
      1587,
      1596,
      1598,
      1599,
      1601,
      1603,
      1626,
      1627,
      1630,
      1631,
      1634,
      1635,
      1636,
      1642,
      1643,
      1644,
      1645,
      1646,
      1653,
      1654,
      1655,
      1656,
      1657,
      1658,
      1659,
      1660,
      1662
   ],
   "needs_pytest": false
}