{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "func_name",
      "result_type"
   ],
   "lines": [
      1555,
      1566,
      1567,
      1568,
      1572,
      1573,
      1574,
      1575,
      1576,
      1577,
      1579,
      1580,
      1582,
      1583,
      1584,
      1586,
      1587,
      1588,
      1589,
      1590,
      1591,
      1592,
      1593,
      1594,
      1597,
      1598,
      1599,
      1600,
      1601,
      1602,
      1603,
      1604,
      1605,
      1606,
      1609,
      1612,
      1613,
      1614,
      1615,
      1617,
      1618,
      1620,
      1621,
      1622,
      1623,
      1625,
      1626,
      1627,
      1628,
      1629,
      1630,
      1631,
      1633,
      1634,
      1635,
      1636,
      1637,
      1638,
      1639,
      1640,
      1641,
      1643,
      1644,
      1645
   ],
   "non_code_lines": [
      1556,
      1557,
      1558,
      1559,
      1560,
      1561,
      1562,
      1563,
      1564,
      1565,
      1569,
      1570,
      1571,
      1578,
      1581,
      1585,
      1595,
      1596,
      1607,
      1608,
      1610,
      1611,
      1616,
      1619,
      1624,
      1632,
      1642
   ],
   "is_method": false,
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "source_file": null,
   "coverage_io": {
      "3649e8a11142b681f652a9cfe9d087b25932ccef5c13b2726f71c469db24063b": {
         "args": [
            "CoverageInfo(args=['all_types.get_item_at_index'], kwargs={}, globals_before={}, globals_after={}, result='[[22, 29, 30, 31, 32, 33, 34, 36], set(), set()]', coverage=[1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1060, 1061, 1063, 1066, 1069, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1104, 1109], exception_type='', exception_message='', constructor='', cost=0.002, result_type='list')",
            "\"  \"",
            "\"unit_test_generator\"",
            "\"return_function_line_numbers_and_accessed_globals\"",
            "\"list\""
         ],
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "result": "['  arg = all_types.get_item_at_index\\n', '  x = unit_test_generator.return_function_line_numbers_and_accessed_globals(arg)\\n', '  assert x == [[22, 29, 30, 31, 32, 33, 34, 36], set(), set()]\\n']",
         "coverage": [
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            238,
            239,
            240,
            242,
            243,
            246,
            253,
            254,
            255,
            256,
            284,
            285,
            286,
            289,
            290,
            413,
            414,
            425,
            430,
            431,
            436,
            437,
            438,
            440,
            441,
            442,
            444,
            445,
            446,
            450,
            454,
            459,
            460,
            464,
            466,
            468,
            476,
            484,
            492,
            504,
            505,
            659,
            660,
            674,
            680,
            683,
            684,
            685,
            692,
            694,
            697,
            699,
            727,
            728,
            732,
            747,
            793,
            795,
            798,
            799,
            801,
            803,
            812,
            818,
            820,
            823,
            824,
            825,
            826,
            827,
            828,
            831,
            845,
            846,
            847,
            848,
            849,
            850,
            851,
            869,
            870,
            872,
            873,
            877,
            878,
            879,
            880,
            882,
            884,
            890,
            891,
            892,
            894,
            895,
            900,
            901,
            902,
            904,
            912,
            913,
            915,
            916,
            917,
            918,
            924,
            925,
            926,
            947,
            956,
            958,
            964,
            966,
            967,
            974,
            975,
            982,
            983,
            985,
            986,
            987,
            989,
            990,
            991,
            992,
            993,
            995,
            996,
            1000,
            1005,
            1006,
            1018,
            1019,
            1024,
            1025,
            1026,
            1028,
            1029,
            1030,
            1037,
            1039,
            1040,
            1041,
            1042,
            1043,
            1045,
            1046,
            1047,
            1048,
            1060,
            1061,
            1063,
            1066,
            1069,
            1079,
            1081,
            1083,
            1084,
            1085,
            1086,
            1087,
            1088,
            1089,
            1093,
            1094,
            1095,
            1096,
            1097,
            1098,
            1100,
            1104,
            1109,
            1162,
            1164,
            1165,
            1166,
            1167,
            1168,
            1447,
            1449,
            1566,
            1567,
            1568,
            1572,
            1579,
            1580,
            1586,
            1587,
            1588,
            1597,
            1599,
            1600,
            1601,
            1602,
            1603,
            1617,
            1618,
            1621,
            1622,
            1625,
            1626,
            1627,
            1633,
            1634,
            1635,
            1636,
            1637,
            1640,
            1643,
            1644,
            1645
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.091,
         "result_type": "list"
      }
   },
   "coverage_percentage": 48.44,
   "types_in_use": [
      "logging.Logger",
      "src.unit_test_generator.CoverageInfo"
   ],
   "unified_test_coverage": [
      1566,
      1567,
      1568,
      1572,
      1579,
      1580,
      1586,
      1587,
      1588,
      1597,
      1599,
      1600,
      1601,
      1602,
      1603,
      1617,
      1618,
      1621,
      1622,
      1625,
      1626,
      1627,
      1633,
      1634,
      1635,
      1636,
      1637,
      1640,
      1643,
      1644,
      1645
   ],
   "needs_pytest": false
}