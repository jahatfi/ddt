{
   "name": "meta_program_function_call",
   "lines": [
      1549,
      1560,
      1561,
      1562,
      1566,
      1567,
      1568,
      1569,
      1570,
      1571,
      1573,
      1574,
      1576,
      1577,
      1578,
      1580,
      1581,
      1582,
      1583,
      1584,
      1585,
      1586,
      1587,
      1588,
      1591,
      1592,
      1593,
      1594,
      1595,
      1596,
      1597,
      1598,
      1599,
      1600,
      1603,
      1606,
      1607,
      1608,
      1609,
      1611,
      1612,
      1614,
      1615,
      1616,
      1617,
      1619,
      1620,
      1621,
      1622,
      1623,
      1624,
      1625,
      1627,
      1628,
      1629,
      1630,
      1631,
      1632,
      1633,
      1634,
      1635,
      1637,
      1638,
      1639
   ],
   "non_code_lines": [
      1550,
      1551,
      1552,
      1553,
      1554,
      1555,
      1556,
      1557,
      1558,
      1559,
      1563,
      1564,
      1565,
      1572,
      1575,
      1579,
      1589,
      1590,
      1601,
      1602,
      1604,
      1605,
      1610,
      1613,
      1618,
      1626,
      1636
   ],
   "is_method": false,
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "source_file": null,
   "coverage_io": {
      "43043303d144cfa7b0fea30e4d80c56f1707699a5ae23ec5b45a8d6309f83672": {
         "parameter_names": [
            "this_state",
            "tab",
            "package",
            "func_name",
            "result_type"
         ],
         "args": [
            "CoverageInfo(parameter_names=['f'], args=['all_types.get_item_at_index'], kwargs={}, globals_before={}, globals_after={}, result='[[22, 29, 30, 31, 32, 33, 34, 36], set(), set()]', coverage=[1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1054, 1055, 1057, 1060, 1063, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1098, 1103], exception_type='', exception_message='', constructor='', cost=0.003, result_type='list')",
            "\"  \"",
            "\"unit_test_generator\"",
            "\"return_function_line_numbers_and_accessed_globals\"",
            "\"list\""
         ],
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "result": "['  arg = all_types.get_item_at_index\\n', '  x = unit_test_generator.return_function_line_numbers_and_accessed_globals(arg)\\n', '  assert x == [[22, 29, 30, 31, 32, 33, 34, 36], set(), set()]\\n']",
         "coverage": [
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            234,
            235,
            236,
            238,
            239,
            242,
            249,
            250,
            251,
            252,
            280,
            281,
            282,
            285,
            286,
            407,
            408,
            419,
            424,
            425,
            430,
            431,
            432,
            434,
            435,
            436,
            438,
            439,
            440,
            444,
            448,
            453,
            454,
            458,
            460,
            462,
            469,
            477,
            485,
            497,
            498,
            652,
            653,
            667,
            673,
            674,
            677,
            678,
            679,
            686,
            688,
            691,
            693,
            721,
            722,
            726,
            741,
            787,
            789,
            792,
            793,
            795,
            797,
            806,
            812,
            814,
            817,
            818,
            819,
            820,
            821,
            822,
            825,
            839,
            840,
            841,
            842,
            843,
            844,
            845,
            863,
            864,
            866,
            867,
            871,
            872,
            873,
            874,
            876,
            878,
            884,
            885,
            886,
            888,
            889,
            894,
            895,
            896,
            898,
            906,
            907,
            909,
            910,
            911,
            912,
            918,
            919,
            920,
            941,
            950,
            952,
            958,
            960,
            961,
            968,
            969,
            976,
            977,
            979,
            980,
            981,
            983,
            984,
            985,
            986,
            987,
            989,
            990,
            994,
            999,
            1000,
            1012,
            1013,
            1018,
            1019,
            1020,
            1022,
            1023,
            1024,
            1031,
            1033,
            1034,
            1035,
            1036,
            1037,
            1039,
            1040,
            1041,
            1042,
            1054,
            1055,
            1057,
            1060,
            1063,
            1073,
            1075,
            1077,
            1078,
            1079,
            1080,
            1081,
            1082,
            1083,
            1087,
            1088,
            1089,
            1090,
            1091,
            1092,
            1094,
            1098,
            1103,
            1156,
            1158,
            1159,
            1160,
            1161,
            1162,
            1441,
            1443,
            1560,
            1561,
            1562,
            1566,
            1573,
            1574,
            1580,
            1581,
            1582,
            1591,
            1593,
            1594,
            1595,
            1596,
            1597,
            1611,
            1612,
            1615,
            1616,
            1619,
            1620,
            1621,
            1627,
            1628,
            1629,
            1630,
            1631,
            1634,
            1637,
            1638,
            1639
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.125,
         "result_type": "list"
      }
   },
   "coverage_percentage": 48.44,
   "types_in_use": [
      "logging.Logger",
      "src.unit_test_generator.CoverageInfo"
   ],
   "unified_test_coverage": [
      1560,
      1561,
      1562,
      1566,
      1573,
      1574,
      1580,
      1581,
      1582,
      1591,
      1593,
      1594,
      1595,
      1596,
      1597,
      1611,
      1612,
      1615,
      1616,
      1619,
      1620,
      1621,
      1627,
      1628,
      1629,
      1630,
      1631,
      1634,
      1637,
      1638,
      1639
   ],
   "needs_pytest": false
}