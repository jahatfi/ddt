{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "function_metadata"
   ],
   "lines": [
      1552,
      1562,
      1563,
      1564,
      1565,
      1566,
      1567,
      1568,
      1567,
      1569,
      1570,
      1571,
      1573,
      1576,
      1578,
      1579,
      1583,
      1584,
      1586,
      1587,
      1588,
      1590,
      1591,
      1592,
      1593,
      1594,
      1595,
      1598,
      1601,
      1602,
      1603,
      1604,
      1605,
      1608,
      1610,
      1611,
      1612,
      1613,
      1614,
      1615,
      1616,
      1617,
      1618,
      1620,
      1624,
      1625,
      1627,
      1628,
      1629,
      1630,
      1632,
      1633,
      1634,
      1635,
      1636,
      1637,
      1638,
      1639,
      1640,
      1642,
      1643,
      1644,
      1645,
      1646,
      1647,
      1648,
      1649,
      1652,
      1653,
      1654,
      1661,
      1662,
      1664,
      1665,
      1666
   ],
   "non_code_lines": [
      1553,
      1554,
      1555,
      1556,
      1557,
      1558,
      1559,
      1560,
      1561,
      1572,
      1574,
      1575,
      1577,
      1580,
      1581,
      1582,
      1585,
      1589,
      1596,
      1597,
      1599,
      1600,
      1606,
      1607,
      1609,
      1619,
      1621,
      1622,
      1623,
      1626,
      1631,
      1641,
      1650,
      1651,
      1655,
      1656,
      1657,
      1658,
      1659,
      1660,
      1663
   ],
   "is_method": false,
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "source_file": null,
   "coverage_io": {
      "a5eeb849825fa8518dcb8d9ac6d3892d108af82576d4b8afd937edb98803a768": {
         "args": [
            "CoverageInfo(args=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args=['6'], kwargs={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], kwargs={}, globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args=['6'], kwargs={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1399, 1402, 1406, 1415, 1416, 1419], exception_type='', exception_message='', constructor='', cost=0.001)",
            "\"  \"",
            "\"unit_test_generator\"",
            "FunctionMetaData(name='update_global', lines=[1391, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1415, 1416, 1417, 1418, 1419], parameter_names=['obj', 'this_global', 'phase', 'this_coverage_info'], is_method=False, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'c4a3e1cd55e579656c0c7185c1d24c62fc6edb40531b00401a93301e4b8d4a01': CoverageInfo(args=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args=['6'], kwargs={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], kwargs={}, globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args=['6'], kwargs={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1399, 1402, 1406, 1415, 1416, 1419], exception_type='', exception_message='', constructor='', cost=0.001)}, coverage_percentage=46.15, types_in_use={'logging.Logger', 'src.unit_test_generator.CoverageInfo'}, unified_test_coverage={1415, 1416, 1419, 1399, 1402, 1406}, needs_pytest=False)"
         ],
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "expected_result": "['    result = unit_test_generator.update_global(obj,this_global,phase,this_coverage_info)\\n', '    assert isinstance(result, expected_type)\\n', '    assert result == expected_result or result == eval(expected_result)\\n']",
         "expected_type": "list",
         "coverage": [
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            239,
            240,
            241,
            244,
            245,
            248,
            249,
            250,
            260,
            261,
            262,
            263,
            291,
            292,
            293,
            296,
            297,
            420,
            421,
            436,
            441,
            442,
            447,
            448,
            449,
            451,
            452,
            453,
            455,
            456,
            457,
            461,
            465,
            471,
            472,
            476,
            478,
            479,
            480,
            488,
            496,
            504,
            516,
            517,
            681,
            682,
            696,
            702,
            705,
            706,
            707,
            718,
            720,
            723,
            725,
            745,
            746,
            750,
            764,
            815,
            817,
            820,
            821,
            823,
            825,
            834,
            840,
            842,
            845,
            846,
            847,
            848,
            849,
            851,
            865,
            866,
            867,
            868,
            869,
            870,
            871,
            894,
            895,
            897,
            898,
            899,
            900,
            901,
            903,
            905,
            911,
            912,
            913,
            915,
            916,
            921,
            922,
            923,
            925,
            934,
            935,
            937,
            938,
            939,
            940,
            946,
            947,
            948,
            969,
            979,
            981,
            991,
            993,
            994,
            1001,
            1002,
            1009,
            1010,
            1012,
            1013,
            1014,
            1015,
            1016,
            1017,
            1018,
            1019,
            1023,
            1028,
            1029,
            1041,
            1042,
            1047,
            1048,
            1049,
            1051,
            1052,
            1053,
            1060,
            1062,
            1063,
            1064,
            1065,
            1066,
            1068,
            1069,
            1070,
            1071,
            1083,
            1084,
            1087,
            1090,
            1100,
            1102,
            1104,
            1105,
            1106,
            1107,
            1108,
            1109,
            1110,
            1111,
            1112,
            1113,
            1114,
            1115,
            1116,
            1117,
            1119,
            1123,
            1128,
            1181,
            1183,
            1184,
            1185,
            1186,
            1187,
            1562,
            1563,
            1564,
            1565,
            1566,
            1567,
            1568,
            1569,
            1570,
            1571,
            1573,
            1576,
            1583,
            1584,
            1590,
            1591,
            1601,
            1602,
            1603,
            1608,
            1624,
            1625,
            1628,
            1629,
            1632,
            1633,
            1634,
            1642,
            1643,
            1644,
            1645,
            1646,
            1652,
            1653,
            1654,
            1661,
            1662,
            1666
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.083
      }
   },
   "coverage_percentage": 50.67,
   "types_in_use": [
      "logging.Logger",
      "pathlib.WindowsPath",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "unified_test_coverage": [
      1562,
      1563,
      1564,
      1565,
      1566,
      1567,
      1568,
      1569,
      1570,
      1571,
      1573,
      1576,
      1583,
      1584,
      1590,
      1591,
      1601,
      1602,
      1603,
      1608,
      1624,
      1625,
      1628,
      1629,
      1632,
      1633,
      1634,
      1642,
      1643,
      1644,
      1645,
      1646,
      1652,
      1653,
      1654,
      1661,
      1662,
      1666
   ],
   "needs_pytest": false,
   "exceptions_raised": []
}