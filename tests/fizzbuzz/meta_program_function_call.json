{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "function_metadata"
   ],
   "is_method": false,
   "source_file": null,
   "lines": [
      1768,
      1769,
      1770,
      1771,
      1772,
      1773,
      1774,
      1773,
      1775,
      1776,
      1777,
      1779,
      1782,
      1784,
      1785,
      1789,
      1790,
      1794,
      1795,
      1797,
      1798,
      1799,
      1800,
      1801,
      1802,
      1805,
      1808,
      1809,
      1810,
      1811,
      1812,
      1815,
      1817,
      1818,
      1819,
      1820,
      1821,
      1822,
      1823,
      1824,
      1825,
      1827,
      1831,
      1832,
      1834,
      1835,
      1836,
      1837,
      1839,
      1840,
      1841,
      1842,
      1843,
      1844,
      1845,
      1846,
      1847,
      1849,
      1850,
      1851,
      1852,
      1853,
      1854,
      1855,
      1856,
      1861,
      1868,
      1869,
      1871,
      1872,
      1873,
      1874,
      1875,
      1876,
      1879,
      1880,
      1881
   ],
   "non_code_lines": [
      1778,
      1780,
      1781,
      1783,
      1786,
      1787,
      1788,
      1791,
      1792,
      1793,
      1796,
      1803,
      1804,
      1806,
      1807,
      1813,
      1814,
      1816,
      1826,
      1828,
      1829,
      1830,
      1833,
      1838,
      1848,
      1857,
      1858,
      1859,
      1860,
      1862,
      1863,
      1864,
      1865,
      1866,
      1867,
      1870,
      1877,
      1878
   ],
   "coverage_io": {
      "a71958d9424df2c079077217ee8a425558fabf5ba8290616c541a3fcc4014a53": {
         "args_before": [
            "CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after={'this_coverage_info': \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"}, kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)",
            "\"  \"",
            "\"unit_test_generator\"",
            "FunctionMetaData(name='update_global', parameter_names=['obj', 'this_global', 'phase', 'this_coverage_info'], is_method=False, lines=[1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1620, 1621, 1622, 1623, 1624], non_code_lines={1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4': CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after=OrderedDict([('this_coverage_info', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\")]), kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)}, coverage_percentage=46.15, types_in_use={'logging.Manager', 'src.unit_test_generator.CoverageInfo', 'logging.Logger', 'logging.PlaceHolder', 'logging.StreamHandler', 'logging.RootLogger'}, unified_test_coverage={1604, 1607, 1612, 1620, 1621, 1624}, needs_pytest=False, callable_files={'update_global': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})"
         ],
         "args_after": {
            "this_state": "CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after={'this_coverage_info': \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"}, kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)",
            "function_metadata": "FunctionMetaData(name='update_global', parameter_names=['obj', 'this_global', 'phase', 'this_coverage_info'], is_method=False, lines=[1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1620, 1621, 1622, 1623, 1624], non_code_lines={1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4': CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after=OrderedDict([('this_coverage_info', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\")]), kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)}, coverage_percentage=46.15, types_in_use={'logging.Manager', 'src.unit_test_generator.CoverageInfo', 'logging.Logger', 'logging.PlaceHolder', 'logging.StreamHandler', 'logging.RootLogger'}, unified_test_coverage={1604, 1607, 1612, 1620, 1621, 1624}, needs_pytest=False, callable_files={'update_global': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})"
         },
         "kwargs": {},
         "kwargs_after": {},
         "globals_before": {},
         "globals_after": {},
         "expected_result": "['    result = unit_test_generator.update_global(obj,this_global,phase,this_coverage_info)\\n', '    assert result == expected_result or result == eval(expected_result)\\n', '    assert this_coverage_info == eval(args_after[\"this_coverage_info\"]) or args_after[\"this_coverage_info\"] == this_coverage_info\\n']",
         "expected_type": "list",
         "coverage": [
            1768,
            1769,
            1770,
            1771,
            1772,
            1773,
            1774,
            1775,
            1776,
            1777,
            1779,
            1782,
            1789,
            1790,
            1797,
            1798,
            1808,
            1809,
            1810,
            1815,
            1831,
            1832,
            1835,
            1836,
            1839,
            1840,
            1841,
            1849,
            1850,
            1851,
            1852,
            1853,
            1861,
            1868,
            1869,
            1871,
            1872,
            1873,
            1874,
            1881
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.13
      }
   },
   "coverage_percentage": 51.95,
   "types_in_use": [
      "collections.OrderedDict",
      "logging.Logger",
      "logging.Manager",
      "logging.PlaceHolder",
      "logging.RootLogger",
      "logging.StreamHandler",
      "pathlib.WindowsPath",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "unified_test_coverage": [
      1768,
      1769,
      1770,
      1771,
      1772,
      1773,
      1774,
      1775,
      1776,
      1777,
      1779,
      1782,
      1789,
      1790,
      1797,
      1798,
      1808,
      1809,
      1810,
      1815,
      1831,
      1832,
      1835,
      1836,
      1839,
      1840,
      1841,
      1849,
      1850,
      1851,
      1852,
      1853,
      1861,
      1868,
      1869,
      1871,
      1872,
      1873,
      1874,
      1881
   ],
   "needs_pytest": false,
   "exceptions_raised": [],
   "callable_files": {
      "meta_program_function_call": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\src\\unit_test_generator.py"
   }
}