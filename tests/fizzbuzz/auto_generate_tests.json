{
   "name": "auto_generate_tests",
   "parameter_names": [
      "function_metadata",
      "state",
      "function_name",
      "source_file",
      "tests_dir",
      "outdir",
      "indent_size"
   ],
   "is_method": false,
   "source_file": null,
   "lines": [
      1900,
      1901,
      1902,
      1903,
      1904,
      1906,
      1907,
      1908,
      1909,
      1914,
      1920,
      1921,
      1922,
      1923,
      1924,
      1925,
      1926,
      1927,
      1928,
      1930,
      1931,
      1932,
      1933,
      1934,
      1933,
      1936,
      1937,
      1939,
      1940,
      1942,
      1943,
      1944,
      1945,
      1946,
      1947,
      1949,
      1950,
      1951,
      1952,
      1953,
      1954,
      1955,
      1957,
      1958,
      1959,
      1962,
      1964,
      1965,
      1966,
      1967,
      1969,
      1970,
      1968,
      1972,
      1975,
      1977,
      1978,
      1979,
      1980,
      1981,
      1982,
      1983,
      1984,
      1986,
      1988,
      1989,
      1990,
      1991,
      1993,
      1994,
      1995,
      1996,
      1997,
      1998,
      1999,
      2000,
      2001,
      2002,
      2003,
      2004,
      2005,
      2006,
      2007,
      2008,
      2009,
      2010,
      2011,
      2012,
      2013,
      2014,
      2015,
      2016,
      2017,
      2018,
      2019,
      2020,
      2021,
      2022,
      2023,
      2024,
      2025,
      2026,
      2027,
      2028,
      2030,
      2032,
      2033,
      2034,
      2035,
      2036,
      2034,
      2038,
      2039,
      2040,
      2041,
      2042,
      2043,
      2044,
      2045,
      2046,
      2047,
      2048,
      2049,
      2050,
      2051,
      2052,
      2053,
      2054,
      2055,
      2054,
      2047,
      2056,
      2057,
      2058,
      2060,
      2061,
      2062,
      2063,
      2065,
      2066,
      2067,
      2069,
      2071,
      2072,
      2073,
      2074,
      2075,
      2076,
      2078,
      2080,
      2081,
      2082,
      2083,
      2087,
      2088,
      2089,
      2090,
      2091,
      2092,
      2093,
      2097,
      2098,
      2099,
      2100,
      2101,
      2102,
      2103,
      2104,
      2106,
      2107,
      2108,
      2109,
      2110,
      2111,
      2112,
      2113,
      2114,
      2115,
      2116,
      2119,
      2122,
      2123,
      2124,
      2125,
      2126,
      2127,
      2128,
      2129,
      2131,
      2133,
      2134,
      2136,
      2137,
      2138,
      2139,
      2140,
      2141,
      2143,
      2145,
      2146,
      2148,
      2149,
      2150,
      2152,
      2153,
      2154,
      2155,
      2158,
      2159,
      2160,
      2162,
      2164,
      2165,
      2166,
      2168,
      2169,
      2170,
      2171,
      2168,
      2172,
      2174,
      2175,
      2176,
      2177,
      2178,
      2179,
      2180,
      2181,
      2182,
      2183,
      2184,
      2185,
      2186,
      2191,
      2192,
      2196,
      2198,
      2199,
      2200,
      2202,
      2204,
      2205,
      2206,
      2209,
      2210,
      2214,
      2215,
      2217,
      2219,
      2220,
      2221,
      2222,
      2223,
      2224,
      2225,
      2226,
      2224,
      2227,
      2228,
      2229,
      2230,
      2231,
      2232,
      2233,
      2234,
      2235,
      2236,
      2237,
      2238,
      2239,
      2243,
      2244,
      2245,
      2246,
      2248,
      2249,
      2250,
      2251,
      2253,
      2257,
      2258,
      2259,
      2261,
      2262,
      2263,
      2264,
      2265,
      2266,
      2267,
      2268,
      2269,
      2268,
      2263,
      2271,
      2275,
      2276,
      2277,
      2278,
      2276,
      2280,
      2281,
      2282,
      2283,
      2284,
      2285,
      2280,
      2287,
      2288,
      2304,
      2305,
      2306,
      1925,
      2007,
      2010,
      2014,
      2017,
      2020,
      2023,
      2039,
      2040,
      2191
   ],
   "non_code_lines": [
      1905,
      1910,
      1911,
      1912,
      1913,
      1915,
      1916,
      1917,
      1918,
      1919,
      1929,
      1935,
      1938,
      1941,
      1948,
      1956,
      1960,
      1961,
      1963,
      1971,
      1973,
      1974,
      1976,
      1985,
      1987,
      1992,
      2029,
      2031,
      2037,
      2059,
      2064,
      2068,
      2070,
      2077,
      2079,
      2084,
      2085,
      2086,
      2094,
      2095,
      2096,
      2105,
      2117,
      2118,
      2120,
      2121,
      2130,
      2132,
      2135,
      2142,
      2144,
      2147,
      2151,
      2156,
      2157,
      2161,
      2163,
      2167,
      2173,
      2187,
      2188,
      2189,
      2190
   ],
   "coverage_io": {
      "3421741eb8bad125dd82869c6e11e6b41f301c7a1d00415a40d193b452d0041c": {
         "args_before": [
            "FunctionMetaData(name='update_global', parameter_names=['obj', 'this_global', 'phase', 'this_coverage_info'], is_method=False, lines=[1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1620, 1621, 1622, 1623, 1624], non_code_lines={1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4': CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after=OrderedDict([('this_coverage_info', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\")]), kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)}, coverage_percentage=46.15, types_in_use={'logging.Manager', 'src.unit_test_generator.CoverageInfo', 'logging.Logger', 'logging.PlaceHolder', 'logging.StreamHandler', 'logging.RootLogger'}, unified_test_coverage={1604, 1607, 1612, 1620, 1621, 1624}, needs_pytest=False, callable_files={'update_global': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})",
            "{'364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4': CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after=OrderedDict([('this_coverage_info', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\")]), kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)}",
            "\"update_global\"",
            "WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py')",
            "WindowsPath('.')",
            "WindowsPath('.')",
            "2"
         ],
         "args_after": {
            "function_metadata": "FunctionMetaData(name='update_global', parameter_names=['obj', 'this_global', 'phase', 'this_coverage_info'], is_method=False, lines=[1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1620, 1621, 1622, 1623, 1624], non_code_lines={1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4': CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after=OrderedDict([('this_coverage_info', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\")]), kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)}, coverage_percentage=46.15, types_in_use={'logging.Manager', 'src.unit_test_generator.CoverageInfo', 'logging.Logger', 'logging.PlaceHolder', 'logging.StreamHandler', 'logging.RootLogger'}, unified_test_coverage={1604, 1607, 1612, 1620, 1621, 1624}, needs_pytest=False, callable_files={'update_global': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})",
            "state": "{'364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4': CoverageInfo(args_before=['\"fizzbuzz\"', '\"mode\"', '\"Before\"', \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], args_after={'this_coverage_info': \"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"}, kwargs={}, kwargs_after=OrderedDict(), globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1604, 1607, 1612, 1620, 1621, 1624], exception_type='', exception_message='', constructor='', cost=0.0)}",
            "source_file": "WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py')",
            "tests_dir": "WindowsPath('.')",
            "outdir": "WindowsPath('.')"
         },
         "kwargs": {},
         "kwargs_after": {},
         "globals_before": {
            "all_metadata": {
               "update_global": {
                  "name": "update_global",
                  "parameter_names": [
                     "obj",
                     "this_global",
                     "phase",
                     "this_coverage_info"
                  ],
                  "is_method": false,
                  "source_file": null,
                  "lines": [
                     1604,
                     1605,
                     1606,
                     1607,
                     1608,
                     1609,
                     1610,
                     1612,
                     1620,
                     1621,
                     1622,
                     1623,
                     1624
                  ],
                  "non_code_lines": [
                     1611,
                     1613,
                     1614,
                     1615,
                     1616,
                     1617,
                     1618,
                     1619
                  ],
                  "coverage_io": {
                     "364dbab6e996d2b07a239c6ce2e2df688159375398cc8e1cb47de9677b4e0af4": {
                        "args_before": [
                           "\"fizzbuzz\"",
                           "\"mode\"",
                           "\"Before\"",
                           "CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)"
                        ],
                        "args_after": {
                           "this_coverage_info": "CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)"
                        },
                        "kwargs": {},
                        "kwargs_after": {},
                        "globals_before": {},
                        "globals_after": {},
                        "expected_result": "CoverageInfo(args_before=['6'], args_after={}, kwargs={}, kwargs_after={}, globals_before={'mode': 'fizzbuzz'}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)",
                        "expected_type": "src.unit_test_generator.CoverageInfo",
                        "coverage": [
                           1604,
                           1607,
                           1612,
                           1620,
                           1621,
                           1624
                        ],
                        "exception_type": "",
                        "exception_message": "",
                        "constructor": "",
                        "cost": 0.0
                     }
                  },
                  "coverage_percentage": 46.15,
                  "types_in_use": [
                     "logging.Logger",
                     "logging.Manager",
                     "logging.PlaceHolder",
                     "logging.RootLogger",
                     "logging.StreamHandler",
                     "src.unit_test_generator.CoverageInfo"
                  ],
                  "global_vars_read_from": [
                     "logger"
                  ],
                  "global_vars_written_to": [],
                  "unified_test_coverage": [
                     1604,
                     1607,
                     1612,
                     1620,
                     1621,
                     1624
                  ],
                  "needs_pytest": false,
                  "exceptions_raised": [],
                  "callable_files": {
                     "update_global": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\src\\unit_test_generator.py"
                  }
               },
               "update_metadata": {
                  "name": "update_metadata",
                  "parameter_names": [
                     "f",
                     "this_metadata"
                  ],
                  "is_method": false,
                  "source_file": null,
                  "lines": [
                     1428,
                     1429,
                     1430,
                     1432,
                     1433,
                     1434,
                     1435,
                     1436,
                     1437,
                     1438,
                     1440,
                     1441,
                     1442,
                     1443,
                     1444,
                     1445,
                     1446,
                     1447,
                     1448,
                     1450,
                     1452,
                     1453,
                     1454,
                     1455,
                     1456,
                     1457,
                     1458,
                     1459,
                     1457,
                     1452,
                     1460,
                     1461,
                     1462,
                     1463,
                     1464,
                     1465,
                     1466,
                     1467,
                     1466
                  ],
                  "non_code_lines": [
                     1431,
                     1439,
                     1449,
                     1451
                  ],
                  "coverage_io": {
                     "b9ded047ca9f4cf619a522df63e8845075a0fa7108cf61570f9e1f5b62bc07b7": {
                        "args_before": [
                           "<function fizzbuzz at 0x00000220F2228220>",
                           "FunctionMetaData(name='fizzbuzz', parameter_names=['number'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/fizzbuzz/fizzbuzz.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})"
                        ],
                        "args_after": {
                           "this_metadata": "FunctionMetaData(name='fizzbuzz', parameter_names=['number'], is_method=False, lines=[40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57], non_code_lines={55}, global_vars_read_from={'mode'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/fizzbuzz/fizzbuzz.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'fizzbuzz': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\tests\\\\fizzbuzz\\\\fizzbuzz.py'})"
                        },
                        "kwargs": {},
                        "kwargs_after": {},
                        "globals_before": {},
                        "globals_after": {},
                        "expected_result": "None",
                        "expected_type": "NoneType",
                        "coverage": [
                           1428,
                           1430,
                           1432,
                           1433,
                           1434,
                           1435,
                           1436,
                           1437,
                           1438,
                           1440,
                           1442,
                           1443,
                           1444,
                           1445,
                           1446,
                           1447,
                           1448,
                           1450,
                           1452,
                           1460,
                           1461,
                           1462,
                           1463,
                           1464,
                           1465
                        ],
                        "exception_type": "",
                        "exception_message": "",
                        "constructor": "",
                        "cost": 0.0
                     }
                  },
                  "coverage_percentage": 64.1,
                  "types_in_use": [
                     "fizzbuzz.fizzbuzz",
                     "logging.Logger",
                     "logging.Manager",
                     "logging.PlaceHolder",
                     "logging.RootLogger",
                     "logging.StreamHandler",
                     "pathlib.WindowsPath",
                     "src.unit_test_generator.FunctionMetaData"
                  ],
                  "global_vars_read_from": [
                     "logger"
                  ],
                  "global_vars_written_to": [],
                  "unified_test_coverage": [
                     1428,
                     1430,
                     1432,
                     1433,
                     1434,
                     1435,
                     1436,
                     1437,
                     1438,
                     1440,
                     1442,
                     1443,
                     1444,
                     1445,
                     1446,
                     1447,
                     1448,
                     1450,
                     1452,
                     1460,
                     1461,
                     1462,
                     1463,
                     1464,
                     1465
                  ],
                  "needs_pytest": false,
                  "exceptions_raised": [],
                  "callable_files": {
                     "update_metadata": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\src\\unit_test_generator.py"
                  }
               },
               "fizzbuzz": {
                  "name": "fizzbuzz",
                  "parameter_names": [
                     "number"
                  ],
                  "is_method": false,
                  "source_file": null,
                  "lines": [
                     40,
                     41,
                     42,
                     43,
                     44,
                     45,
                     46,
                     47,
                     48,
                     49,
                     50,
                     51,
                     52,
                     53,
                     54,
                     56,
                     57
                  ],
                  "non_code_lines": [
                     55
                  ],
                  "coverage_io": {
                     "2fcde918ffacbbb30ae860654c530d7850072b9a41fc16835cdc5bf0fdc3020d": {
                        "args_before": [
                           "30"
                        ],
                        "args_after": {},
                        "kwargs": {},
                        "kwargs_after": {},
                        "globals_before": {
                           "mode": "fizzbuzz"
                        },
                        "globals_after": {},
                        "expected_result": "30 with mode='fizzbuzz' yields 'fizzbuzz'",
                        "expected_type": "str",
                        "coverage": [
                           40,
                           41,
                           42,
                           43,
                           44,
                           45,
                           46,
                           47,
                           57
                        ],
                        "exception_type": "",
                        "exception_message": "",
                        "constructor": "",
                        "cost": 0.0
                     },
                     "332f74facbdc5888beeee5ca119926b4501c2dc9dd3ab99e811d6866bdd02840": {
                        "args_before": [
                           "30"
                        ],
                        "args_after": {},
                        "kwargs": {},
                        "kwargs_after": {},
                        "globals_before": {
                           "mode": "buzzfizz"
                        },
                        "globals_after": {},
                        "expected_result": "30 with mode='buzzfizz' yields 'buzzfizz'",
                        "expected_type": "str",
                        "coverage": [
                           40,
                           41,
                           48,
                           49,
                           50,
                           51,
                           52,
                           53,
                           54,
                           57
                        ],
                        "exception_type": "",
                        "exception_message": "",
                        "constructor": "",
                        "cost": 0.0
                     },
                     "458ae2906b3b144383bfba0618ff5c3ea1d2e981782eae30455d98eb608b4488": {
                        "args_before": [
                           "6"
                        ],
                        "args_after": {},
                        "kwargs": {},
                        "kwargs_after": {},
                        "globals_before": {
                           "mode": "a_test"
                        },
                        "globals_after": {},
                        "expected_result": "Mode 'a_test' invalid for fizzbuzz()",
                        "expected_type": "str",
                        "coverage": [
                           40,
                           41,
                           48,
                           56,
                           57
                        ],
                        "exception_type": "",
                        "exception_message": "",
                        "constructor": "",
                        "cost": 0.0
                     }
                  },
                  "coverage_percentage": 100.0,
                  "types_in_use": [],
                  "global_vars_read_from": [
                     "mode"
                  ],
                  "global_vars_written_to": [],
                  "unified_test_coverage": [
                     40,
                     41,
                     42,
                     43,
                     44,
                     45,
                     46,
                     47,
                     48,
                     49,
                     50,
                     51,
                     52,
                     53,
                     54,
                     56,
                     57
                  ],
                  "needs_pytest": false,
                  "exceptions_raised": [],
                  "callable_files": {
                     "fizzbuzz": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\tests\\fizzbuzz\\fizzbuzz.py"
                  }
               }
            }
         },
         "globals_after": {},
         "expected_result": "252acc6c11e8af0020608482027ff01a094facec4dddd6c5b97a134d630b6692",
         "expected_type": "str",
         "coverage": [
            1900,
            1901,
            1902,
            1903,
            1906,
            1907,
            1908,
            1909,
            1914,
            1920,
            1921,
            1922,
            1932,
            1936,
            1937,
            1939,
            1940,
            1942,
            1943,
            1962,
            1964,
            1965,
            1966,
            1967,
            1968,
            1972,
            1975,
            1977,
            1978,
            1979,
            1980,
            1981,
            1982,
            1988,
            1989,
            1990,
            1991,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2005,
            2006,
            2007,
            2010,
            2013,
            2014,
            2015,
            2016,
            2017,
            2020,
            2023,
            2026,
            2027,
            2028,
            2030,
            2033,
            2034,
            2038,
            2039,
            2040,
            2041,
            2042,
            2044,
            2045,
            2046,
            2056,
            2061,
            2071,
            2072,
            2073,
            2075,
            2078,
            2081,
            2082,
            2083,
            2087,
            2088,
            2089,
            2090,
            2091,
            2101,
            2103,
            2106,
            2107,
            2108,
            2109,
            2119,
            2122,
            2123,
            2124,
            2125,
            2126,
            2128,
            2129,
            2152,
            2154,
            2158,
            2159,
            2166,
            2168,
            2172,
            2174,
            2191,
            2192,
            2198,
            2199,
            2202,
            2204,
            2205,
            2206,
            2209,
            2210,
            2214,
            2217,
            2219,
            2220,
            2221,
            2222,
            2223,
            2224,
            2227,
            2229,
            2230,
            2231,
            2232,
            2235,
            2238,
            2239,
            2243,
            2244,
            2245,
            2246,
            2248,
            2249,
            2250,
            2251,
            2253,
            2261,
            2262,
            2263,
            2264,
            2265,
            2266,
            2267,
            2268,
            2269,
            2271,
            2275,
            2276,
            2287,
            2288,
            2304,
            2305,
            2306
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 1.18
      }
   },
   "coverage_percentage": 50.47,
   "types_in_use": [
      "_io.TextIOWrapper",
      "collections.OrderedDict",
      "collections.defaultdict",
      "logging.Logger",
      "logging.Manager",
      "logging.PlaceHolder",
      "logging.RootLogger",
      "logging.StreamHandler",
      "pathlib.WindowsPath",
      "pprint.PrettyPrinter",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "global_vars_read_from": [
      "CalledProcessError",
      "all_metadata",
      "logger",
      "pp"
   ],
   "global_vars_written_to": [],
   "unified_test_coverage": [
      1900,
      1901,
      1902,
      1903,
      1906,
      1907,
      1908,
      1909,
      1914,
      1920,
      1921,
      1922,
      1932,
      1936,
      1937,
      1939,
      1940,
      1942,
      1943,
      1962,
      1964,
      1965,
      1966,
      1967,
      1968,
      1972,
      1975,
      1977,
      1978,
      1979,
      1980,
      1981,
      1982,
      1988,
      1989,
      1990,
      1991,
      1993,
      1994,
      1995,
      1996,
      1997,
      1998,
      1999,
      2000,
      2001,
      2002,
      2003,
      2005,
      2006,
      2007,
      2010,
      2013,
      2014,
      2015,
      2016,
      2017,
      2020,
      2023,
      2026,
      2027,
      2028,
      2030,
      2033,
      2034,
      2038,
      2039,
      2040,
      2041,
      2042,
      2044,
      2045,
      2046,
      2056,
      2061,
      2071,
      2072,
      2073,
      2075,
      2078,
      2081,
      2082,
      2083,
      2087,
      2088,
      2089,
      2090,
      2091,
      2101,
      2103,
      2106,
      2107,
      2108,
      2109,
      2119,
      2122,
      2123,
      2124,
      2125,
      2126,
      2128,
      2129,
      2152,
      2154,
      2158,
      2159,
      2166,
      2168,
      2172,
      2174,
      2191,
      2192,
      2198,
      2199,
      2202,
      2204,
      2205,
      2206,
      2209,
      2210,
      2214,
      2217,
      2219,
      2220,
      2221,
      2222,
      2223,
      2224,
      2227,
      2229,
      2230,
      2231,
      2232,
      2235,
      2238,
      2239,
      2243,
      2244,
      2245,
      2246,
      2248,
      2249,
      2250,
      2251,
      2253,
      2261,
      2262,
      2263,
      2264,
      2265,
      2266,
      2267,
      2268,
      2269,
      2271,
      2275,
      2276,
      2287,
      2288,
      2304,
      2305,
      2306
   ],
   "needs_pytest": false,
   "exceptions_raised": [],
   "callable_files": {
      "auto_generate_tests": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\src\\unit_test_generator.py"
   }
}