INFO    |car             |<module>                 :216 :args=Namespace(log_level='info', disable_unit_test_generation=False)
INFO    |car             |first_test               :138 :-------------------------------------Car #0-------------------------------------
INFO    |car             |first_test               :143 :Car("Red", 10, 0)
INFO    |car             |first_test               :144 :Driving Car("Red", 10, 0)
CRITICAL|unit_test_generator|do_the_decorator_thing   :688 :(Car("Red", 10, 0), -1, 1)
ERROR   |car             |first_test               :150 :gas(-1,1) raised <class 'ValueError'>
ERROR   |car             |first_test               :151 :Gas rate (m/s) must be positive.
CRITICAL|unit_test_generator|do_the_decorator_thing   :688 :(Car("Red", 10, 0), 30)
INFO    |car             |first_test               :167 :Car("Red", 10, 30)
INFO    |car             |first_test               :138 :-------------------------------------Car #1-------------------------------------
INFO    |car             |first_test               :143 :Car("White", 12, -30)
INFO    |car             |first_test               :144 :Driving Car("White", 12, -30)
INFO    |car             |first_test               :167 :Car("White", 16, 60)
INFO    |car             |first_test               :138 :-------------------------------------Car #2-------------------------------------
INFO    |car             |first_test               :143 :Car("Blue", 14, 30)
INFO    |car             |first_test               :144 :Driving Car("Blue", 14, 30)
INFO    |car             |first_test               :167 :Car("Blue", 5, 210)
INFO    |car             |first_test               :138 :-------------------------------------Car #3-------------------------------------
INFO    |car             |first_test               :143 :Car("Green", 16, 90)
INFO    |car             |first_test               :144 :Driving Car("Green", 16, 90)
ERROR   |car             |first_test               :164 :change_steer_angle(-1080) raised <class 'AssertionError'>
ERROR   |car             |first_test               :165 :angle=-1080    out of bounds!
INFO    |car             |first_test               :167 :Car("Green", 32, 90)
INFO    |car             |second_test              :174 :------------------------------------Test 2.1------------------------------------
CRITICAL|unit_test_generator|do_the_decorator_thing   :688 :(Car("Red", 20, 0), Car("White", 19, 0))
CRITICAL|unit_test_generator|do_the_decorator_thing   :787 :class_repr=Car("White", 19, 0) arg=Car("White", 19, 0)
INFO    |car             |second_test              :179 :Car("Red", 20, 0) is going faster than Car("White", 19, 0)
INFO    |car             |second_test              :183 :------------------------------------Test 2.2------------------------------------
CRITICAL|unit_test_generator|meta_program_function_call:1616:CoverageInfo(args=['-1', '1'], kwargs={}, globals_before={'method_call_counter': '0'}, globals_after={}, result='', coverage=[], exception_type='', exception_message='', constructor='Car("Red", 10, 0)')
CRITICAL|unit_test_generator|meta_program_function_call:1616:[[29, 35, 36, 37], set(), set()]
CRITICAL|unit_test_generator|meta_program_function_call:1616:None
CRITICAL|unit_test_generator|meta_program_function_call:1616:30
CRITICAL|unit_test_generator|meta_program_function_call:1616:True
CRITICAL|unit_test_generator|meta_program_function_call:1616:['1410', '1415-1416', '1394']
CRITICAL|unit_test_generator|meta_program_function_call:1612:'CoverageInfo(args=[\'-1\', \'1\'], kwargs={}, globals_before={\'method_call_counter\': \'0\'}, globals_after={}, result=\'\', coverage=[], exception_type=\'\', exception_message=\'\', constructor=\'Car(\"Red\", 10, 0)\')'
CRITICAL|unit_test_generator|meta_program_function_call:1616:['  x = unit_test_generator.update_global(*args)\n', '  assert x == CoverageInfo(args=[\'-1\', \'1\'], kwargs={}, globals_before={\'method_call_counter\': \'0\'}, globals_after={}, result=\'\', coverage=[], exception_type=\'\', exception_message=\'\', constructor=\'Car("Red", 10, 0)\')\n']
