{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "function_metadata"
   ],
   "is_method": false,
   "source_file": null,
   "lines": [
      1735,
      1736,
      1737,
      1738,
      1739,
      1740,
      1741,
      1740,
      1742,
      1743,
      1744,
      1746,
      1749,
      1751,
      1752,
      1756,
      1757,
      1761,
      1762,
      1764,
      1765,
      1766,
      1767,
      1768,
      1769,
      1772,
      1775,
      1776,
      1777,
      1778,
      1779,
      1782,
      1784,
      1785,
      1786,
      1787,
      1788,
      1789,
      1790,
      1791,
      1792,
      1794,
      1798,
      1799,
      1801,
      1802,
      1803,
      1804,
      1806,
      1807,
      1808,
      1809,
      1810,
      1811,
      1812,
      1813,
      1814,
      1816,
      1817,
      1818,
      1819,
      1820,
      1821,
      1822,
      1823,
      1828,
      1835,
      1836,
      1838,
      1839,
      1840,
      1841,
      1842,
      1843,
      1846,
      1847,
      1848
   ],
   "non_code_lines": [
      1745,
      1747,
      1748,
      1750,
      1753,
      1754,
      1755,
      1758,
      1759,
      1760,
      1763,
      1770,
      1771,
      1773,
      1774,
      1780,
      1781,
      1783,
      1793,
      1795,
      1796,
      1797,
      1800,
      1805,
      1815,
      1824,
      1825,
      1826,
      1827,
      1829,
      1830,
      1831,
      1832,
      1833,
      1834,
      1837,
      1844,
      1845
   ],
   "coverage_io": {
      "6df4521460f1064881c64f23da9d00f7c5f9d5da0d44ad87d626c7e13fc43311": {
         "args_before": [
            "CoverageInfo(args_before=['<function append_list at 0x0000022C5112A5C0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after={'this_metadata': \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\pass_by_assignment\\\\\\\\pass_by_assignment.py'})\"}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1290, 1291, 1292, 1293, 1294, 1295], exception_type='', exception_message='', constructor='', cost=0.0)",
            "\"  \"",
            "\"unit_test_generator\"",
            "FunctionMetaData(name='update_metadata', parameter_names=['f', 'this_metadata'], is_method=False, lines=[1258, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1287, 1282, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1296], non_code_lines={1281, 1279, 1261, 1269}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'acdf98d267361a3f8ba273a0bc84e714ae828bcc5d136a8bfef8d94927351325': CoverageInfo(args_before=['<function append_list at 0x0000022C5112A5C0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after=OrderedDict([('this_metadata', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\pass_by_assignment\\\\\\\\pass_by_assignment.py'})\")]), kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1290, 1291, 1292, 1293, 1294, 1295], exception_type='', exception_message='', constructor='', cost=0.0)}, coverage_percentage=64.1, types_in_use={'pathlib.WindowsPath', 'pass_by_assignment', 'src.unit_test_generator.FunctionMetaData', 'logging.Logger'}, unified_test_coverage={1280, 1282, 1290, 1291, 1292, 1293, 1294, 1295, 1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278}, needs_pytest=False, callable_files={'update_metadata': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})"
         ],
         "args_after": {
            "this_state": "CoverageInfo(args_before=['<function append_list at 0x0000022C5112A5C0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after={'this_metadata': \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\pass_by_assignment\\\\\\\\pass_by_assignment.py'})\"}, kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1290, 1291, 1292, 1293, 1294, 1295], exception_type='', exception_message='', constructor='', cost=0.0)",
            "function_metadata": "FunctionMetaData(name='update_metadata', parameter_names=['f', 'this_metadata'], is_method=False, lines=[1258, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1287, 1282, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1296], non_code_lines={1281, 1279, 1261, 1269}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'acdf98d267361a3f8ba273a0bc84e714ae828bcc5d136a8bfef8d94927351325': CoverageInfo(args_before=['<function append_list at 0x0000022C5112A5C0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after=OrderedDict([('this_metadata', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\pass_by_assignment\\\\\\\\pass_by_assignment.py'})\")]), kwargs={}, kwargs_after={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1290, 1291, 1292, 1293, 1294, 1295], exception_type='', exception_message='', constructor='', cost=0.0)}, coverage_percentage=64.1, types_in_use={'pathlib.WindowsPath', 'pass_by_assignment', 'src.unit_test_generator.FunctionMetaData', 'logging.Logger'}, unified_test_coverage={1280, 1282, 1290, 1291, 1292, 1293, 1294, 1295, 1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278}, needs_pytest=False, callable_files={'update_metadata': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})"
         },
         "kwargs": {},
         "kwargs_after": {},
         "globals_before": {},
         "globals_after": {},
         "expected_result": "['    result = unit_test_generator.update_metadata(f,this_metadata)\\n', '    assert result == expected_result or result == eval(expected_result)\\n', '    assert this_metadata == eval(args_after[\"this_metadata\"]) or args_after[\"this_metadata\"] == this_metadata\\n']",
         "expected_type": "list",
         "coverage": [
            1735,
            1736,
            1737,
            1738,
            1739,
            1740,
            1741,
            1742,
            1743,
            1744,
            1746,
            1749,
            1756,
            1757,
            1764,
            1765,
            1775,
            1776,
            1777,
            1782,
            1798,
            1799,
            1802,
            1803,
            1806,
            1807,
            1808,
            1816,
            1817,
            1818,
            1819,
            1820,
            1828,
            1835,
            1836,
            1838,
            1839,
            1840,
            1841,
            1848
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.1
      }
   },
   "coverage_percentage": 51.95,
   "types_in_use": [
      "logging.Logger",
      "pathlib.WindowsPath",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "unified_test_coverage": [
      1735,
      1736,
      1737,
      1738,
      1739,
      1740,
      1741,
      1742,
      1743,
      1744,
      1746,
      1749,
      1756,
      1757,
      1764,
      1765,
      1775,
      1776,
      1777,
      1782,
      1798,
      1799,
      1802,
      1803,
      1806,
      1807,
      1808,
      1816,
      1817,
      1818,
      1819,
      1820,
      1828,
      1835,
      1836,
      1838,
      1839,
      1840,
      1841,
      1848
   ],
   "needs_pytest": false,
   "exceptions_raised": [],
   "callable_files": {
      "meta_program_function_call": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\src\\unit_test_generator.py"
   }
}