{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "function_metadata"
   ],
   "is_method": false,
   "source_file": null,
   "lines": [
      1690,
      1691,
      1692,
      1693,
      1694,
      1695,
      1696,
      1695,
      1697,
      1698,
      1699,
      1701,
      1704,
      1706,
      1707,
      1711,
      1712,
      1714,
      1715,
      1716,
      1718,
      1719,
      1720,
      1721,
      1722,
      1723,
      1726,
      1729,
      1730,
      1731,
      1732,
      1733,
      1736,
      1738,
      1739,
      1740,
      1741,
      1742,
      1743,
      1744,
      1745,
      1746,
      1748,
      1752,
      1753,
      1755,
      1756,
      1757,
      1758,
      1760,
      1761,
      1762,
      1763,
      1764,
      1765,
      1766,
      1767,
      1768,
      1770,
      1771,
      1772,
      1773,
      1774,
      1775,
      1776,
      1777,
      1780,
      1781,
      1782,
      1789,
      1790,
      1792,
      1793,
      1794,
      1797,
      1798,
      1799
   ],
   "non_code_lines": [
      1700,
      1702,
      1703,
      1705,
      1708,
      1709,
      1710,
      1713,
      1717,
      1724,
      1725,
      1727,
      1728,
      1734,
      1735,
      1737,
      1747,
      1749,
      1750,
      1751,
      1754,
      1759,
      1769,
      1778,
      1779,
      1783,
      1784,
      1785,
      1786,
      1787,
      1788,
      1791,
      1795,
      1796
   ],
   "coverage_io": {
      "e09d6aa5fc37beddf2bcd95ccd8cb83a02dabcd8c33f10e5bf0bb1433cbd5a82": {
         "args_before": [
            "CoverageInfo(args_before=['<function append_list at 0x000001F4DD19A7A0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after={'this_metadata': \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\example_pass_by_assignment\\\\\\\\pass_by_assignment.py'})\"}, kwargs={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1245, 1246, 1247, 1248, 1249, 1250], exception_type='', exception_message='', constructor='', cost=0.002)",
            "\"  \"",
            "\"unit_test_generator\"",
            "FunctionMetaData(name='update_metadata', parameter_names=['f', 'this_metadata'], is_method=False, lines=[1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1242, 1237, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1251], non_code_lines={1216, 1234, 1236, 1224}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'d860950721e0c30a205935799e1149c24b6f22544fabce285abc220dd6a0c0a3': CoverageInfo(args_before=['<function append_list at 0x000001F4DD19A7A0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after=OrderedDict([('this_metadata', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\example_pass_by_assignment\\\\\\\\pass_by_assignment.py'})\")]), kwargs={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1245, 1246, 1247, 1248, 1249, 1250], exception_type='', exception_message='', constructor='', cost=0.002)}, coverage_percentage=64.1, types_in_use={'pass_by_assignment', 'logging.Logger', 'pathlib.WindowsPath', 'src.unit_test_generator.FunctionMetaData'}, unified_test_coverage={1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1245, 1246, 1247, 1248, 1249, 1250}, needs_pytest=False, callable_files={'update_metadata': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})"
         ],
         "args_after": {
            "this_state": "CoverageInfo(args_before=['<function append_list at 0x000001F4DD19A7A0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after={'this_metadata': \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\example_pass_by_assignment\\\\\\\\pass_by_assignment.py'})\"}, kwargs={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1245, 1246, 1247, 1248, 1249, 1250], exception_type='', exception_message='', constructor='', cost=0.002)",
            "function_metadata": "FunctionMetaData(name='update_metadata', parameter_names=['f', 'this_metadata'], is_method=False, lines=[1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1242, 1237, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1251], non_code_lines={1216, 1234, 1236, 1224}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'d860950721e0c30a205935799e1149c24b6f22544fabce285abc220dd6a0c0a3': CoverageInfo(args_before=['<function append_list at 0x000001F4DD19A7A0>', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[], non_code_lines=set(), global_vars_read_from=set(), global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={})\"], args_after=OrderedDict([('this_metadata', \"FunctionMetaData(name='append_list', parameter_names=['this_list', 'item'], is_method=False, lines=[31, 32], non_code_lines=set(), global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/tests/example_pass_by_assignment/pass_by_assignment.py'), coverage_io={}, coverage_percentage=0.0, types_in_use=set(), unified_test_coverage=set(), needs_pytest=False, callable_files={'append_list': 'C:\\\\\\\\Users\\\\\\\\James\\\\\\\\Documents\\\\\\\\CyberResources\\\\\\\\ddt\\\\\\\\tests\\\\\\\\example_pass_by_assignment\\\\\\\\pass_by_assignment.py'})\")]), kwargs={}, globals_before={}, globals_after={}, expected_result='None', expected_type='NoneType', coverage=[1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1245, 1246, 1247, 1248, 1249, 1250], exception_type='', exception_message='', constructor='', cost=0.002)}, coverage_percentage=64.1, types_in_use={'pass_by_assignment', 'logging.Logger', 'pathlib.WindowsPath', 'src.unit_test_generator.FunctionMetaData'}, unified_test_coverage={1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1237, 1245, 1246, 1247, 1248, 1249, 1250}, needs_pytest=False, callable_files={'update_metadata': 'C:\\\\Users\\\\James\\\\Documents\\\\CyberResources\\\\ddt\\\\src\\\\unit_test_generator.py'})"
         },
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "expected_result": "['    result = unit_test_generator.update_metadata(f,this_metadata)\\n', '    assert result == expected_result or result == eval(expected_result)\\n', '    assert this_metadata == eval(args_after[\"this_metadata\"]) or args_after[\"this_metadata\"] == this_metadata\\n']",
         "expected_type": "list",
         "coverage": [
            1690,
            1691,
            1692,
            1693,
            1694,
            1695,
            1696,
            1697,
            1698,
            1699,
            1701,
            1704,
            1711,
            1712,
            1718,
            1719,
            1729,
            1730,
            1731,
            1736,
            1752,
            1753,
            1756,
            1757,
            1760,
            1761,
            1762,
            1770,
            1771,
            1772,
            1773,
            1774,
            1780,
            1782,
            1789,
            1790,
            1792,
            1793,
            1794,
            1799
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.119
      }
   },
   "coverage_percentage": 51.95,
   "types_in_use": [
      "logging.Logger",
      "pathlib.WindowsPath",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "unified_test_coverage": [
      1690,
      1691,
      1692,
      1693,
      1694,
      1695,
      1696,
      1697,
      1698,
      1699,
      1701,
      1704,
      1711,
      1712,
      1718,
      1719,
      1729,
      1730,
      1731,
      1736,
      1752,
      1753,
      1756,
      1757,
      1760,
      1761,
      1762,
      1770,
      1771,
      1772,
      1773,
      1774,
      1780,
      1782,
      1789,
      1790,
      1792,
      1793,
      1794,
      1799
   ],
   "needs_pytest": false,
   "exceptions_raised": [],
   "callable_files": {
      "meta_program_function_call": "C:\\Users\\James\\Documents\\CyberResources\\ddt\\src\\unit_test_generator.py"
   }
}