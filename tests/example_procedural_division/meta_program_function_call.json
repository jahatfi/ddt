{
   "name": "meta_program_function_call",
   "parameter_names": [
      "this_state",
      "tab",
      "package",
      "function_metadata"
   ],
   "is_method": false,
   "source_file": null,
   "lines": [
      1585,
      1586,
      1587,
      1588,
      1589,
      1590,
      1591,
      1590,
      1592,
      1593,
      1594,
      1596,
      1599,
      1601,
      1602,
      1606,
      1607,
      1609,
      1610,
      1611,
      1613,
      1614,
      1615,
      1616,
      1617,
      1618,
      1621,
      1624,
      1625,
      1626,
      1627,
      1628,
      1631,
      1633,
      1634,
      1635,
      1636,
      1637,
      1638,
      1639,
      1640,
      1641,
      1643,
      1647,
      1648,
      1650,
      1651,
      1652,
      1653,
      1655,
      1656,
      1657,
      1658,
      1659,
      1660,
      1661,
      1662,
      1663,
      1665,
      1666,
      1667,
      1668,
      1669,
      1670,
      1671,
      1672,
      1675,
      1676,
      1677,
      1684,
      1685,
      1687,
      1688,
      1689
   ],
   "non_code_lines": [
      1595,
      1597,
      1598,
      1600,
      1603,
      1604,
      1605,
      1608,
      1612,
      1619,
      1620,
      1622,
      1623,
      1629,
      1630,
      1632,
      1642,
      1644,
      1645,
      1646,
      1649,
      1654,
      1664,
      1673,
      1674,
      1678,
      1679,
      1680,
      1681,
      1682,
      1683,
      1686
   ],
   "coverage_io": {
      "f80f70959b208432b15f0e5e3132f0838bc8a0defc411b337e14065b8603f989": {
         "args": [
            "CoverageInfo(args=['0', '\"error_code\"', '\"Before\"', \"CoverageInfo(args=['6', '2'], kwargs={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], kwargs={}, globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args=['6', '2'], kwargs={}, globals_before={'error_code': 0}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1421, 1424, 1428, 1437, 1438, 1441], exception_type='', exception_message='', constructor='', cost=0.002)",
            "\"  \"",
            "\"unit_test_generator\"",
            "FunctionMetaData(name='update_global', parameter_names=['obj', 'this_global', 'phase', 'this_coverage_info'], is_method=False, lines=[1421, 1422, 1423, 1424, 1425, 1426, 1428, 1437, 1438, 1439, 1440, 1441], non_code_lines={1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436}, global_vars_read_from={'logger'}, global_vars_written_to=set(), source_file=WindowsPath('C:/Users/James/Documents/CyberResources/ddt/src/unit_test_generator.py'), coverage_io={'da43029a53540481556f16ea2f885298e81b420042c8a12d0a8e42c45a1c1cc3': CoverageInfo(args=['0', '\"error_code\"', '\"Before\"', \"CoverageInfo(args=['6', '2'], kwargs={}, globals_before={}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\"], kwargs={}, globals_before={}, globals_after={}, expected_result=\"CoverageInfo(args=['6', '2'], kwargs={}, globals_before={'error_code': 0}, globals_after={}, expected_result='', expected_type='', coverage=[], exception_type='', exception_message='', constructor='', cost=0.0)\", expected_type='src.unit_test_generator.CoverageInfo', coverage=[1421, 1424, 1428, 1437, 1438, 1441], exception_type='', exception_message='', constructor='', cost=0.002)}, coverage_percentage=50.0, types_in_use={'logging.Logger', 'src.unit_test_generator.CoverageInfo'}, unified_test_coverage={1441, 1421, 1424, 1428, 1437, 1438}, needs_pytest=False)"
         ],
         "kwargs": {},
         "globals_before": {},
         "globals_after": {},
         "expected_result": "['    result = unit_test_generator.update_global(obj,this_global,phase,this_coverage_info)\\n', '    assert isinstance(result, expected_type)\\n', '    assert result == expected_result or result == eval(expected_result)\\n']",
         "expected_type": "list",
         "coverage": [
            1585,
            1586,
            1587,
            1588,
            1589,
            1590,
            1591,
            1592,
            1593,
            1594,
            1596,
            1599,
            1606,
            1607,
            1613,
            1614,
            1624,
            1625,
            1626,
            1631,
            1647,
            1648,
            1651,
            1652,
            1655,
            1656,
            1657,
            1665,
            1666,
            1667,
            1668,
            1669,
            1675,
            1676,
            1677,
            1684,
            1685,
            1689
         ],
         "exception_type": "",
         "exception_message": "",
         "constructor": "",
         "cost": 0.187
      }
   },
   "coverage_percentage": 51.35,
   "types_in_use": [
      "logging.Logger",
      "pathlib.WindowsPath",
      "src.unit_test_generator.CoverageInfo",
      "src.unit_test_generator.FunctionMetaData"
   ],
   "global_vars_read_from": [
      "logger"
   ],
   "global_vars_written_to": [],
   "unified_test_coverage": [
      1585,
      1586,
      1587,
      1588,
      1589,
      1590,
      1591,
      1592,
      1593,
      1594,
      1596,
      1599,
      1606,
      1607,
      1613,
      1614,
      1624,
      1625,
      1626,
      1631,
      1647,
      1648,
      1651,
      1652,
      1655,
      1656,
      1657,
      1665,
      1666,
      1667,
      1668,
      1669,
      1675,
      1676,
      1677,
      1684,
      1685,
      1689
   ],
   "needs_pytest": false,
   "exceptions_raised": []
}