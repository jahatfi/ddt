************* Module src.unit_test_generator
unit_test_generator.py:146:46: C0303: Trailing whitespace (trailing-whitespace)
unit_test_generator.py:173:59: C0303: Trailing whitespace (trailing-whitespace)
unit_test_generator.py:314:0: C0301: Line too long (107/100) (line-too-long)
unit_test_generator.py:436:63: C0303: Trailing whitespace (trailing-whitespace)
unit_test_generator.py:598:12: C0303: Trailing whitespace (trailing-whitespace)
unit_test_generator.py:615:65: C0303: Trailing whitespace (trailing-whitespace)
unit_test_generator.py:666:0: C0301: Line too long (122/100) (line-too-long)
unit_test_generator.py:834:0: C0301: Line too long (130/100) (line-too-long)
unit_test_generator.py:893:0: C0301: Line too long (104/100) (line-too-long)
unit_test_generator.py:1149:0: C0301: Line too long (104/100) (line-too-long)
unit_test_generator.py:1221:39: C0303: Trailing whitespace (trailing-whitespace)
unit_test_generator.py:1480:0: C0301: Line too long (106/100) (line-too-long)
unit_test_generator.py:1582:0: C0301: Line too long (106/100) (line-too-long)
unit_test_generator.py:1602:0: C0301: Line too long (110/100) (line-too-long)
unit_test_generator.py:1:0: C0302: Too many lines in module (1682/1000) (too-many-lines)
unit_test_generator.py:222:9: W0511: TODO add a "update_types_in_use" method (fixme)
unit_test_generator.py:235:17: W0511: TODO: Fix the root cause of this bug (fixme)
unit_test_generator.py:237:9: W0511: TODO call self.update_types_in_use here (fixme)
unit_test_generator.py:381:21: W0511: TODO try/catch/raise exception (fixme)
unit_test_generator.py:390:21: W0511: TODO try/catch/raise exception (fixme)
unit_test_generator.py:518:1: W0511: TODO Import any modules here for whom 'repr' doesn't work (fixme)
unit_test_generator.py:869:5: W0511: TODO remove these assserts and the hash_keys set (fixme)
unit_test_generator.py:875:5: W0511: TODO remove this deepcopy (fixme)
unit_test_generator.py:941:5: W0511: TODO: Find a better way to do this than a str compare! (fixme)
unit_test_generator.py:973:9: W0511: TODO: Determine if there's ever more than one leading space (fixme)
unit_test_generator.py:1046:13: W0511: TODO: This is (fixme)
unit_test_generator.py:1141:9: W0511: TODO Fix bug here where function_metadata.coverage_io dictionaries (fixme)
unit_test_generator.py:1147:9: W0511: TODO The below below is likely unnecessary now (fixme)
unit_test_generator.py:1392:5: W0511: TODO: Test this block below (fixme)
unit_test_generator.py:1462:5: W0511: TODO Add to the import list any specific modules for (fixme)
unit_test_generator.py:1531:13: W0511: TODO If an arg is a class, construct it (fixme)
unit_test_generator.py:1:0: C0114: Missing module docstring (missing-module-docstring)
unit_test_generator.py:41:0: C0103: Constant name "coverage_cutoff" doesn't conform to UPPER_CASE naming style (invalid-name)
unit_test_generator.py:44:0: C0103: Constant name "active" doesn't conform to UPPER_CASE naming style (invalid-name)
unit_test_generator.py:56:0: C0115: Missing class docstring (missing-class-docstring)
unit_test_generator.py:57:4: C0116: Missing function or method docstring (missing-function-docstring)
unit_test_generator.py:57:4: C0103: Method name "toJSON" doesn't conform to snake_case naming style (invalid-name)
unit_test_generator.py:56:0: R0903: Too few public methods (1/2) (too-few-public-methods)
unit_test_generator.py:60:0: C0115: Missing class docstring (missing-class-docstring)
unit_test_generator.py:61:4: W0237: Parameter 'o' has been renamed to 'obj' in overriding 'JsonableEncoder.default' method (arguments-renamed)
unit_test_generator.py:70:0: C0115: Missing class docstring (missing-class-docstring)
unit_test_generator.py:72:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
unit_test_generator.py:71:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
unit_test_generator.py:85:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
unit_test_generator.py:95:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
unit_test_generator.py:108:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
unit_test_generator.py:112:4: R0913: Too many arguments (15/5) (too-many-arguments)
unit_test_generator.py:186:4: C0116: Missing function or method docstring (missing-function-docstring)
unit_test_generator.py:189:35: R1718: Consider using a set comprehension (consider-using-set-comprehension)
unit_test_generator.py:189:39: R1721: Unnecessary use of a comprehension, use list(range(first_source_line_num, last_source_line_num + 1)) instead. (unnecessary-comprehension)
unit_test_generator.py:196:4: C0116: Missing function or method docstring (missing-function-docstring)
unit_test_generator.py:198:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:199:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:200:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:201:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:202:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:203:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:204:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:205:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:206:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:207:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:208:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:209:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:210:22: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:241:15: E1120: No value for argument 'obj' in function call (no-value-for-parameter)
unit_test_generator.py:319:12: W0602: Using global for 'recursion_depth_per_decoratee' but no assignment is done (global-variable-not-assigned)
unit_test_generator.py:401:19: W0718: Catching too general exception Exception (broad-exception-caught)
unit_test_generator.py:301:8: R0911: Too many return statements (7/6) (too-many-return-statements)
unit_test_generator.py:301:8: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
unit_test_generator.py:444:12: W0719: Raising too general exception: Exception (broad-exception-raised)
unit_test_generator.py:519:0: C0413: Import "from pandas import DataFrame" should be placed at the top of the module (wrong-import-position)
unit_test_generator.py:529:0: C0103: Constant name "coverage_cutoff" doesn't conform to UPPER_CASE naming style (invalid-name)
unit_test_generator.py:531:0: R0914: Too many local variables (51/15) (too-many-locals)
unit_test_generator.py:531:0: W1113: Keyword argument before variable positional arguments list in the definition of do_the_decorator_thing function (keyword-arg-before-vararg)
unit_test_generator.py:556:4: W0602: Using global for 'all_metadata' but no assignment is done (global-variable-not-assigned)
unit_test_generator.py:556:4: W0602: Using global for 'hashed_inputs' but no assignment is done (global-variable-not-assigned)
unit_test_generator.py:558:4: R1715: Consider using dict.get for getting values from a dict if a key is present or a default if not (consider-using-get)
unit_test_generator.py:563:4: W0105: String statement has no effect (pointless-string-statement)
unit_test_generator.py:620:19: W0718: Catching too general exception Exception (broad-exception-caught)
unit_test_generator.py:658:33: C2801: Unnecessarily calls dunder method __repr__. Use repr built-in function. (unnecessary-dunder-call)
unit_test_generator.py:662:20: W0123: Use of eval (eval-used)
unit_test_generator.py:720:11: W0718: Catching too general exception Exception (broad-exception-caught)
unit_test_generator.py:753:15: W0718: Catching too general exception Exception (broad-exception-caught)
unit_test_generator.py:531:0: R0912: Too many branches (53/12) (too-many-branches)
unit_test_generator.py:531:0: R0915: Too many statements (212/50) (too-many-statements)
unit_test_generator.py:903:8: W0201: Attribute '_stdout' defined outside __init__ (attribute-defined-outside-init)
unit_test_generator.py:904:21: W0201: Attribute '_stringio' defined outside __init__ (attribute-defined-outside-init)
unit_test_generator.py:1033:0: R0914: Too many local variables (18/15) (too-many-locals)
unit_test_generator.py:1044:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
unit_test_generator.py:1033:0: R0911: Too many return statements (7/6) (too-many-return-statements)
unit_test_generator.py:1033:0: R0912: Too many branches (23/12) (too-many-branches)
unit_test_generator.py:1033:0: R0915: Too many statements (56/50) (too-many-statements)
unit_test_generator.py:1160:8: W0105: String statement has no effect (pointless-string-statement)
unit_test_generator.py:1311:0: R0914: Too many local variables (19/15) (too-many-locals)
unit_test_generator.py:1321:31: R1718: Consider using a set comprehension (consider-using-set-comprehension)
unit_test_generator.py:1321:35: R1721: Unnecessary use of a comprehension, use list(range(first_source_line_num, last_source_line_num + 1)) instead. (unnecessary-comprehension)
unit_test_generator.py:1368:0: R0914: Too many local variables (18/15) (too-many-locals)
unit_test_generator.py:1368:0: R0912: Too many branches (13/12) (too-many-branches)
unit_test_generator.py:1368:0: R0915: Too many statements (54/50) (too-many-statements)
unit_test_generator.py:1450:0: R0913: Too many arguments (6/5) (too-many-arguments)
unit_test_generator.py:1450:0: R0914: Too many local variables (47/15) (too-many-locals)
unit_test_generator.py:1655:12: W0622: Redefining built-in 'list' (redefined-builtin)
unit_test_generator.py:1644:8: W0105: String statement has no effect (pointless-string-statement)
unit_test_generator.py:1450:0: R0912: Too many branches (34/12) (too-many-branches)
unit_test_generator.py:1450:0: R0915: Too many statements (125/50) (too-many-statements)
unit_test_generator.py:1496:4: W0612: Unused variable 'item' (unused-variable)
unit_test_generator.py:25:0: W0611: Unused WindowsPath imported from pathlib (unused-import)

------------------------------------------------------------------
Your code has been rated at 8.80/10 (previous run: 8.80/10, +0.00)

